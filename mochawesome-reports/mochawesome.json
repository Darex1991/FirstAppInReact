{
  "stats": {
    "suites": 34,
    "tests": 72,
    "passes": 72,
    "pending": 0,
    "failures": 0,
    "start": "2017-02-04T21:21:16.752Z",
    "end": "2017-02-04T21:21:16.876Z",
    "duration": 124,
    "testsRegistered": 72,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "<BackToTop />",
        "suites": [],
        "tests": [
          {
            "title": "should render a BackToTop",
            "fullTitle": "<BackToTop /> should render a BackToTop",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTop2.default, props));\n(0, _chai.expect)(wrapper.node).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "4323554f-4d2e-4847-8e17-a0f25cd639b0",
            "parentUUID": "93e25eda-f1bc-4744-8ee6-45b5edfbd457",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/backToTop/BackToTop.spec.js",
        "uuid": "93e25eda-f1bc-4744-8ee6-45b5edfbd457",
        "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/backToTop/BackToTop.spec.js",
        "passes": [
          {
            "title": "should render a BackToTop",
            "fullTitle": "<BackToTop /> should render a BackToTop",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTop2.default, props));\n(0, _chai.expect)(wrapper.node).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "4323554f-4d2e-4847-8e17-a0f25cd639b0",
            "parentUUID": "93e25eda-f1bc-4744-8ee6-45b5edfbd457",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 7
      },
      {
        "title": "<BackToTopButton />",
        "suites": [],
        "tests": [
          {
            "title": "should render a BackToTopButton",
            "fullTitle": "<BackToTopButton /> should render a BackToTopButton",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTopButton2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "1340ca7a-9cb1-44f2-b79a-a5274a6d5b68",
            "parentUUID": "d202361b-474e-49c9-a670-dc9f0708a0b9",
            "skipped": false
          },
          {
            "title": "should have UpIcon as default children",
            "fullTitle": "<BackToTopButton /> should have UpIcon as default children",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTopButton2.default, props));\nvar UpIcon = wrapper.find('UpIcon');\n(0, _chai.expect)(UpIcon).to.exist();\n(0, _chai.expect)(UpIcon.prop('color')).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "61812b4c-ae86-45ab-9a7c-3fff2e7e10ab",
            "parentUUID": "d202361b-474e-49c9-a670-dc9f0708a0b9",
            "skipped": false
          },
          {
            "title": "should not have UpIcon as children but a span",
            "fullTitle": "<BackToTopButton /> should not have UpIcon as children but a span",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var extentedProps = (0, _extends3.default)({}, props, {\n  children: _react2.default.createElement(\n    'span',\n    { className: 'childSpan' },\n    'a child'\n  )\n});\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTopButton2.default, extentedProps));\nvar childSpan = wrapper.find('.childSpan');\n(0, _chai.expect)(childSpan).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "ae78ea43-f206-40fe-8b54-450920cb575a",
            "parentUUID": "d202361b-474e-49c9-a670-dc9f0708a0b9",
            "skipped": false
          },
          {
            "title": "should trigger onClick function prop on click",
            "fullTitle": "<BackToTopButton /> should trigger onClick function prop on click",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var event = {};\nvar onClickStub = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTopButton2.default, {\n  position: positionMock,\n  motionStyle: motionStyleMock,\n  onClick: onClickStub\n}));\nvar Button = wrapper.find('button');\nButton.simulate('click', event);\n(0, _chai.expect)(onClickStub.calledOnce).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "4eb26ca6-4d03-4505-899a-15175c436f20",
            "parentUUID": "d202361b-474e-49c9-a670-dc9f0708a0b9",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/backToTop/backToTopButton/BackToTopButton.spec.js",
        "uuid": "d202361b-474e-49c9-a670-dc9f0708a0b9",
        "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/backToTop/backToTopButton/BackToTopButton.spec.js",
        "passes": [
          {
            "title": "should render a BackToTopButton",
            "fullTitle": "<BackToTopButton /> should render a BackToTopButton",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTopButton2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "1340ca7a-9cb1-44f2-b79a-a5274a6d5b68",
            "parentUUID": "d202361b-474e-49c9-a670-dc9f0708a0b9",
            "skipped": false
          },
          {
            "title": "should have UpIcon as default children",
            "fullTitle": "<BackToTopButton /> should have UpIcon as default children",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTopButton2.default, props));\nvar UpIcon = wrapper.find('UpIcon');\n(0, _chai.expect)(UpIcon).to.exist();\n(0, _chai.expect)(UpIcon.prop('color')).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "61812b4c-ae86-45ab-9a7c-3fff2e7e10ab",
            "parentUUID": "d202361b-474e-49c9-a670-dc9f0708a0b9",
            "skipped": false
          },
          {
            "title": "should not have UpIcon as children but a span",
            "fullTitle": "<BackToTopButton /> should not have UpIcon as children but a span",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var extentedProps = (0, _extends3.default)({}, props, {\n  children: _react2.default.createElement(\n    'span',\n    { className: 'childSpan' },\n    'a child'\n  )\n});\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTopButton2.default, extentedProps));\nvar childSpan = wrapper.find('.childSpan');\n(0, _chai.expect)(childSpan).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "ae78ea43-f206-40fe-8b54-450920cb575a",
            "parentUUID": "d202361b-474e-49c9-a670-dc9f0708a0b9",
            "skipped": false
          },
          {
            "title": "should trigger onClick function prop on click",
            "fullTitle": "<BackToTopButton /> should trigger onClick function prop on click",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var event = {};\nvar onClickStub = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTopButton2.default, {\n  position: positionMock,\n  motionStyle: motionStyleMock,\n  onClick: onClickStub\n}));\nvar Button = wrapper.find('button');\nButton.simulate('click', event);\n(0, _chai.expect)(onClickStub.calledOnce).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "4eb26ca6-4d03-4505-899a-15175c436f20",
            "parentUUID": "d202361b-474e-49c9-a670-dc9f0708a0b9",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 18
      },
      {
        "title": "<UpIcon />",
        "suites": [],
        "tests": [
          {
            "title": "should render an UpIcon",
            "fullTitle": "<UpIcon /> should render an UpIcon",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_UpIcon2.default, props));\n(0, _chai.expect)(wrapper.node).to.exist();\n(0, _chai.expect)(wrapper.find('svg')).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "880ee28d-25b0-43e3-84d0-d9a4bb0bb3c5",
            "parentUUID": "949ddbfa-13fc-4562-8c0b-d06176a00857",
            "skipped": false
          },
          {
            "title": "should set default fill color",
            "fullTitle": "<UpIcon /> should set default fill color",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_UpIcon2.default, null));\n(0, _chai.expect)(wrapper.find('svg').prop('fill')).to.equal(defaultColor);",
            "err": {},
            "isRoot": false,
            "uuid": "505b65ec-a986-42e4-a09f-9a9a7df4ac96",
            "parentUUID": "949ddbfa-13fc-4562-8c0b-d06176a00857",
            "skipped": false
          },
          {
            "title": "should set fill color from prop value",
            "fullTitle": "<UpIcon /> should set fill color from prop value",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_UpIcon2.default, props));\n(0, _chai.expect)(wrapper.find('svg').prop('fill')).to.equal(colorMock);",
            "err": {},
            "isRoot": false,
            "uuid": "3ee8c1ab-556c-4a3c-b489-d436e5568538",
            "parentUUID": "949ddbfa-13fc-4562-8c0b-d06176a00857",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/backToTop/backToTopButton/UpIcon.spec.js",
        "uuid": "949ddbfa-13fc-4562-8c0b-d06176a00857",
        "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/backToTop/backToTopButton/UpIcon.spec.js",
        "passes": [
          {
            "title": "should render an UpIcon",
            "fullTitle": "<UpIcon /> should render an UpIcon",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_UpIcon2.default, props));\n(0, _chai.expect)(wrapper.node).to.exist();\n(0, _chai.expect)(wrapper.find('svg')).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "880ee28d-25b0-43e3-84d0-d9a4bb0bb3c5",
            "parentUUID": "949ddbfa-13fc-4562-8c0b-d06176a00857",
            "skipped": false
          },
          {
            "title": "should set default fill color",
            "fullTitle": "<UpIcon /> should set default fill color",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_UpIcon2.default, null));\n(0, _chai.expect)(wrapper.find('svg').prop('fill')).to.equal(defaultColor);",
            "err": {},
            "isRoot": false,
            "uuid": "505b65ec-a986-42e4-a09f-9a9a7df4ac96",
            "parentUUID": "949ddbfa-13fc-4562-8c0b-d06176a00857",
            "skipped": false
          },
          {
            "title": "should set fill color from prop value",
            "fullTitle": "<UpIcon /> should set fill color from prop value",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_UpIcon2.default, props));\n(0, _chai.expect)(wrapper.find('svg').prop('fill')).to.equal(colorMock);",
            "err": {},
            "isRoot": false,
            "uuid": "3ee8c1ab-556c-4a3c-b489-d436e5568538",
            "parentUUID": "949ddbfa-13fc-4562-8c0b-d06176a00857",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      {
        "title": "<Jumbotron />",
        "suites": [],
        "tests": [
          {
            "title": "should render a children",
            "fullTitle": "<Jumbotron /> should render a children",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.Jumbotron, props));\n(0, _chai.expect)(wrapper.containsMatchingElement(_react2.default.createElement(\n  'h1',\n  null,\n  'test'\n))).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "6f813ef7-9d03-45e5-8cec-298314edc105",
            "parentUUID": "ef35dd1f-cb75-47e8-8c49-c5ab6644a4aa",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/jumbotron/Jumbotron.spec.js",
        "uuid": "ef35dd1f-cb75-47e8-8c49-c5ab6644a4aa",
        "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/jumbotron/Jumbotron.spec.js",
        "passes": [
          {
            "title": "should render a children",
            "fullTitle": "<Jumbotron /> should render a children",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.Jumbotron, props));\n(0, _chai.expect)(wrapper.containsMatchingElement(_react2.default.createElement(\n  'h1',\n  null,\n  'test'\n))).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "6f813ef7-9d03-45e5-8cec-298314edc105",
            "parentUUID": "ef35dd1f-cb75-47e8-8c49-c5ab6644a4aa",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      {
        "title": "<Humburger />",
        "suites": [],
        "tests": [
          {
            "title": "should render an Humburger",
            "fullTitle": "<Humburger /> should render an Humburger",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Humburger2.default, null));\n(0, _chai.expect)(wrapper).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "0c5fe03b-ea56-4c24-94fb-c9ef8c259280",
            "parentUUID": "72b1cb4e-5fcb-4487-9e95-fd720434796f",
            "skipped": false
          },
          {
            "title": "should contains a button with \"navbar-toggle\" class",
            "fullTitle": "<Humburger /> should contains a button with \"navbar-toggle\" class",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Humburger2.default, null));\nvar button = wrapper.find('button');\n(0, _chai.expect)(button.hasClass('navbar-toggle')).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "f12d2cec-3d8d-4ead-886d-af2d6e30749e",
            "parentUUID": "72b1cb4e-5fcb-4487-9e95-fd720434796f",
            "skipped": false
          },
          {
            "title": "should contains \"<span className=\"icon-bar\"></span>\"",
            "fullTitle": "<Humburger /> should contains \"<span className=\"icon-bar\"></span>\"",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Humburger2.default, null));\n(0, _chai.expect)(wrapper.contains(_react2.default.createElement('span', { className: 'icon-bar' }))).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "b34b3c66-c927-46b9-bfb3-584adb1a408b",
            "parentUUID": "72b1cb4e-5fcb-4487-9e95-fd720434796f",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/NavigationBar/humburger/Humburger.spec.js",
        "uuid": "72b1cb4e-5fcb-4487-9e95-fd720434796f",
        "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/NavigationBar/humburger/Humburger.spec.js",
        "passes": [
          {
            "title": "should render an Humburger",
            "fullTitle": "<Humburger /> should render an Humburger",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Humburger2.default, null));\n(0, _chai.expect)(wrapper).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "0c5fe03b-ea56-4c24-94fb-c9ef8c259280",
            "parentUUID": "72b1cb4e-5fcb-4487-9e95-fd720434796f",
            "skipped": false
          },
          {
            "title": "should contains a button with \"navbar-toggle\" class",
            "fullTitle": "<Humburger /> should contains a button with \"navbar-toggle\" class",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Humburger2.default, null));\nvar button = wrapper.find('button');\n(0, _chai.expect)(button.hasClass('navbar-toggle')).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "f12d2cec-3d8d-4ead-886d-af2d6e30749e",
            "parentUUID": "72b1cb4e-5fcb-4487-9e95-fd720434796f",
            "skipped": false
          },
          {
            "title": "should contains \"<span className=\"icon-bar\"></span>\"",
            "fullTitle": "<Humburger /> should contains \"<span className=\"icon-bar\"></span>\"",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Humburger2.default, null));\n(0, _chai.expect)(wrapper.contains(_react2.default.createElement('span', { className: 'icon-bar' }))).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "b34b3c66-c927-46b9-bfb3-584adb1a408b",
            "parentUUID": "72b1cb4e-5fcb-4487-9e95-fd720434796f",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      {
        "title": "<LeftNav />",
        "suites": [
          {
            "title": "child <LeftNavButton />",
            "suites": [
              {
                "title": "first LeftNavButton",
                "suites": [],
                "tests": [
                  {
                    "title": "should be passed props label:string set to mock value",
                    "fullTitle": "child <LeftNavButton /> first LeftNavButton should be passed props label:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.first().prop('label')).to.equal(leftLinksMock[0].label);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "47e837bf-896c-4c74-b765-fe233e5ddef5",
                    "parentUUID": "784328fe-d24e-45a2-8d64-062a103a3b0e",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props link:string set to mock value",
                    "fullTitle": "child <LeftNavButton /> first LeftNavButton should be passed props link:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.first().prop('link')).to.equal(leftLinksMock[0].link);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b7dfa135-be66-494a-ba2d-3690909a5e22",
                    "parentUUID": "784328fe-d24e-45a2-8d64-062a103a3b0e",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props viewName:string set to mock value",
                    "fullTitle": "child <LeftNavButton /> first LeftNavButton should be passed props viewName:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.first().prop('viewName')).to.equal(leftLinksMock[0].view);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6e93b788-087c-4723-995e-dc60aae1b136",
                    "parentUUID": "784328fe-d24e-45a2-8d64-062a103a3b0e",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props onClick:function to be a function",
                    "fullTitle": "child <LeftNavButton /> first LeftNavButton should be passed props onClick:function to be a function",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)((0, _typeof3.default)(LeftNavButton.first().prop('onClick'))).to.equal('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6107fe02-52dc-4904-80cb-8fb1959dc6fe",
                    "parentUUID": "784328fe-d24e-45a2-8d64-062a103a3b0e",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/components/NavigationBar/leftNav/LeftNav.spec.js",
                "uuid": "784328fe-d24e-45a2-8d64-062a103a3b0e",
                "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/NavigationBar/leftNav/LeftNav.spec.js",
                "passes": [
                  {
                    "title": "should be passed props label:string set to mock value",
                    "fullTitle": "child <LeftNavButton /> first LeftNavButton should be passed props label:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.first().prop('label')).to.equal(leftLinksMock[0].label);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "47e837bf-896c-4c74-b765-fe233e5ddef5",
                    "parentUUID": "784328fe-d24e-45a2-8d64-062a103a3b0e",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props link:string set to mock value",
                    "fullTitle": "child <LeftNavButton /> first LeftNavButton should be passed props link:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.first().prop('link')).to.equal(leftLinksMock[0].link);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b7dfa135-be66-494a-ba2d-3690909a5e22",
                    "parentUUID": "784328fe-d24e-45a2-8d64-062a103a3b0e",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props viewName:string set to mock value",
                    "fullTitle": "child <LeftNavButton /> first LeftNavButton should be passed props viewName:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.first().prop('viewName')).to.equal(leftLinksMock[0].view);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6e93b788-087c-4723-995e-dc60aae1b136",
                    "parentUUID": "784328fe-d24e-45a2-8d64-062a103a3b0e",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props onClick:function to be a function",
                    "fullTitle": "child <LeftNavButton /> first LeftNavButton should be passed props onClick:function to be a function",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)((0, _typeof3.default)(LeftNavButton.first().prop('onClick'))).to.equal('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6107fe02-52dc-4904-80cb-8fb1959dc6fe",
                    "parentUUID": "784328fe-d24e-45a2-8d64-062a103a3b0e",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0
              },
              {
                "title": "second LeftNavButton",
                "suites": [],
                "tests": [
                  {
                    "title": "should be passed props label:string set to mock value",
                    "fullTitle": "child <LeftNavButton /> second LeftNavButton should be passed props label:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.at(secondLeftNavButtonIndex).prop('label')).to.equal(leftLinksMock[secondLeftNavButtonIndex].label);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0a3a1511-8821-40f5-bc6c-545397d7db9d",
                    "parentUUID": "5682d63d-2546-4461-bf63-898234dbdac5",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props link:string set to mock value",
                    "fullTitle": "child <LeftNavButton /> second LeftNavButton should be passed props link:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.at(secondLeftNavButtonIndex).prop('link')).to.equal(leftLinksMock[secondLeftNavButtonIndex].link);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2f39e6bb-f7a4-49eb-bb43-1ffad8e5b350",
                    "parentUUID": "5682d63d-2546-4461-bf63-898234dbdac5",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props viewName:string set to mock value",
                    "fullTitle": "child <LeftNavButton /> second LeftNavButton should be passed props viewName:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.at(secondLeftNavButtonIndex).prop('viewName')).to.equal(leftLinksMock[secondLeftNavButtonIndex].view);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e88a0a54-deb2-4449-b432-ba99b52a0134",
                    "parentUUID": "5682d63d-2546-4461-bf63-898234dbdac5",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props onClick:function to be a function",
                    "fullTitle": "child <LeftNavButton /> second LeftNavButton should be passed props onClick:function to be a function",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)((0, _typeof3.default)(LeftNavButton.at(secondLeftNavButtonIndex).prop('onClick'))).to.equal('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "70cd63fa-999a-4059-acbf-98c5fe750012",
                    "parentUUID": "5682d63d-2546-4461-bf63-898234dbdac5",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/components/NavigationBar/leftNav/LeftNav.spec.js",
                "uuid": "5682d63d-2546-4461-bf63-898234dbdac5",
                "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/NavigationBar/leftNav/LeftNav.spec.js",
                "passes": [
                  {
                    "title": "should be passed props label:string set to mock value",
                    "fullTitle": "child <LeftNavButton /> second LeftNavButton should be passed props label:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.at(secondLeftNavButtonIndex).prop('label')).to.equal(leftLinksMock[secondLeftNavButtonIndex].label);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0a3a1511-8821-40f5-bc6c-545397d7db9d",
                    "parentUUID": "5682d63d-2546-4461-bf63-898234dbdac5",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props link:string set to mock value",
                    "fullTitle": "child <LeftNavButton /> second LeftNavButton should be passed props link:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.at(secondLeftNavButtonIndex).prop('link')).to.equal(leftLinksMock[secondLeftNavButtonIndex].link);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2f39e6bb-f7a4-49eb-bb43-1ffad8e5b350",
                    "parentUUID": "5682d63d-2546-4461-bf63-898234dbdac5",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props viewName:string set to mock value",
                    "fullTitle": "child <LeftNavButton /> second LeftNavButton should be passed props viewName:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.at(secondLeftNavButtonIndex).prop('viewName')).to.equal(leftLinksMock[secondLeftNavButtonIndex].view);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e88a0a54-deb2-4449-b432-ba99b52a0134",
                    "parentUUID": "5682d63d-2546-4461-bf63-898234dbdac5",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props onClick:function to be a function",
                    "fullTitle": "child <LeftNavButton /> second LeftNavButton should be passed props onClick:function to be a function",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)((0, _typeof3.default)(LeftNavButton.at(secondLeftNavButtonIndex).prop('onClick'))).to.equal('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "70cd63fa-999a-4059-acbf-98c5fe750012",
                    "parentUUID": "5682d63d-2546-4461-bf63-898234dbdac5",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              }
            ],
            "tests": [
              {
                "title": "should exist",
                "fullTitle": "<LeftNav /> child <LeftNavButton /> should exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton).to.exist();",
                "err": {},
                "isRoot": false,
                "uuid": "db054848-ab33-41ca-8ab9-933a420fdcfc",
                "parentUUID": "ab859158-e64f-4fd6-889d-7bf5f8875ae7",
                "skipped": false
              },
              {
                "title": "should be 2 LeftNavButton",
                "fullTitle": "<LeftNav /> child <LeftNavButton /> should be 2 LeftNavButton",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.length).to.equal(2);",
                "err": {},
                "isRoot": false,
                "uuid": "ba89336d-902c-4bf1-b6be-54dc82c2baad",
                "parentUUID": "ab859158-e64f-4fd6-889d-7bf5f8875ae7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/NavigationBar/leftNav/LeftNav.spec.js",
            "uuid": "ab859158-e64f-4fd6-889d-7bf5f8875ae7",
            "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/NavigationBar/leftNav/LeftNav.spec.js",
            "passes": [
              {
                "title": "should exist",
                "fullTitle": "<LeftNav /> child <LeftNavButton /> should exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton).to.exist();",
                "err": {},
                "isRoot": false,
                "uuid": "db054848-ab33-41ca-8ab9-933a420fdcfc",
                "parentUUID": "ab859158-e64f-4fd6-889d-7bf5f8875ae7",
                "skipped": false
              },
              {
                "title": "should be 2 LeftNavButton",
                "fullTitle": "<LeftNav /> child <LeftNavButton /> should be 2 LeftNavButton",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.length).to.equal(2);",
                "err": {},
                "isRoot": false,
                "uuid": "ba89336d-902c-4bf1-b6be-54dc82c2baad",
                "parentUUID": "ab859158-e64f-4fd6-889d-7bf5f8875ae7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [
          {
            "title": "should render a LeftNav",
            "fullTitle": "<LeftNav /> should render a LeftNav",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "6fa36822-c55e-4592-8c61-60be23bf0900",
            "parentUUID": "aa9763ec-0629-48e8-babe-f35d774d49a4",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/NavigationBar/leftNav/LeftNav.spec.js",
        "uuid": "aa9763ec-0629-48e8-babe-f35d774d49a4",
        "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/NavigationBar/leftNav/LeftNav.spec.js",
        "passes": [
          {
            "title": "should render a LeftNav",
            "fullTitle": "<LeftNav /> should render a LeftNav",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "6fa36822-c55e-4592-8c61-60be23bf0900",
            "parentUUID": "aa9763ec-0629-48e8-babe-f35d774d49a4",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      {
        "title": "<LeftNavButton />",
        "suites": [
          {
            "title": "child <Link />",
            "suites": [],
            "tests": [
              {
                "title": "should exist",
                "fullTitle": "<LeftNavButton /> child <Link /> should exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, props));\nvar Link = wrapper.find('Link');\n(0, _chai.expect)(Link).to.exist();",
                "err": {},
                "isRoot": false,
                "uuid": "2863aa7c-93ac-4dd9-98d6-ce9dafd443f2",
                "parentUUID": "2fd3a2b8-7f02-424e-a2e4-723a6229d0fe",
                "skipped": false
              },
              {
                "title": "should trigger a navigation on left link click",
                "fullTitle": "<LeftNavButton /> child <Link /> should trigger a navigation on left link click",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var event = {};\nvar onClickStub = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, (0, _extends3.default)({}, props, {\n  onClick: onClickStub\n})));\nvar Link = wrapper.find('Link');\nLink.simulate('click', event);\n(0, _chai.expect)(onClickStub.calledOnce).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "0eecf1fb-f72e-4cbd-956d-5fa1e81eb4e5",
                "parentUUID": "2fd3a2b8-7f02-424e-a2e4-723a6229d0fe",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/NavigationBar/leftNav/leftNavButton/LeftNavButton.spec.js",
            "uuid": "2fd3a2b8-7f02-424e-a2e4-723a6229d0fe",
            "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/NavigationBar/leftNav/leftNavButton/LeftNavButton.spec.js",
            "passes": [
              {
                "title": "should exist",
                "fullTitle": "<LeftNavButton /> child <Link /> should exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, props));\nvar Link = wrapper.find('Link');\n(0, _chai.expect)(Link).to.exist();",
                "err": {},
                "isRoot": false,
                "uuid": "2863aa7c-93ac-4dd9-98d6-ce9dafd443f2",
                "parentUUID": "2fd3a2b8-7f02-424e-a2e4-723a6229d0fe",
                "skipped": false
              },
              {
                "title": "should trigger a navigation on left link click",
                "fullTitle": "<LeftNavButton /> child <Link /> should trigger a navigation on left link click",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var event = {};\nvar onClickStub = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, (0, _extends3.default)({}, props, {\n  onClick: onClickStub\n})));\nvar Link = wrapper.find('Link');\nLink.simulate('click', event);\n(0, _chai.expect)(onClickStub.calledOnce).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "0eecf1fb-f72e-4cbd-956d-5fa1e81eb4e5",
                "parentUUID": "2fd3a2b8-7f02-424e-a2e4-723a6229d0fe",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [
          {
            "title": "should render a LeftNavButton",
            "fullTitle": "<LeftNavButton /> should render a LeftNavButton",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "78b8411f-e19d-4335-a388-f01f0ece740e",
            "parentUUID": "8f897cb0-8229-406a-8f0c-e592dcf0b053",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/NavigationBar/leftNav/leftNavButton/LeftNavButton.spec.js",
        "uuid": "8f897cb0-8229-406a-8f0c-e592dcf0b053",
        "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/NavigationBar/leftNav/leftNavButton/LeftNavButton.spec.js",
        "passes": [
          {
            "title": "should render a LeftNavButton",
            "fullTitle": "<LeftNavButton /> should render a LeftNavButton",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "78b8411f-e19d-4335-a388-f01f0ece740e",
            "parentUUID": "8f897cb0-8229-406a-8f0c-e592dcf0b053",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "<NavigationBar />",
        "suites": [
          {
            "title": "child <LeftNav />",
            "suites": [],
            "tests": [
              {
                "title": "should be passed props leftLinks:array of object with length 1",
                "fullTitle": "<NavigationBar /> child <LeftNav /> should be passed props leftLinks:array of object with length 1",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar LeftNav = wrapper.find('LeftNav');\n(0, _chai.expect)(LeftNav.prop('leftLinks').length).to.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "b358541f-99c3-4d38-aae8-7787322c2ea6",
                "parentUUID": "cc6a739d-1a3e-48aa-b9e6-4c6f3bd224d1",
                "skipped": false
              },
              {
                "title": "should be passed props onLeftNavButtonClick:func",
                "fullTitle": "<NavigationBar /> child <LeftNav /> should be passed props onLeftNavButtonClick:func",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar LeftNav = wrapper.find('LeftNav');\n(0, _chai.expect)((0, _typeof3.default)(LeftNav.prop('onLeftNavButtonClick'))).to.equal('function');",
                "err": {},
                "isRoot": false,
                "uuid": "5e4777cc-82fb-4b7d-bdc9-d4ed18d63d48",
                "parentUUID": "cc6a739d-1a3e-48aa-b9e6-4c6f3bd224d1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/NavigationBar/NavigationBar.spec.js",
            "uuid": "cc6a739d-1a3e-48aa-b9e6-4c6f3bd224d1",
            "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/NavigationBar/NavigationBar.spec.js",
            "passes": [
              {
                "title": "should be passed props leftLinks:array of object with length 1",
                "fullTitle": "<NavigationBar /> child <LeftNav /> should be passed props leftLinks:array of object with length 1",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar LeftNav = wrapper.find('LeftNav');\n(0, _chai.expect)(LeftNav.prop('leftLinks').length).to.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "b358541f-99c3-4d38-aae8-7787322c2ea6",
                "parentUUID": "cc6a739d-1a3e-48aa-b9e6-4c6f3bd224d1",
                "skipped": false
              },
              {
                "title": "should be passed props onLeftNavButtonClick:func",
                "fullTitle": "<NavigationBar /> child <LeftNav /> should be passed props onLeftNavButtonClick:func",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar LeftNav = wrapper.find('LeftNav');\n(0, _chai.expect)((0, _typeof3.default)(LeftNav.prop('onLeftNavButtonClick'))).to.equal('function');",
                "err": {},
                "isRoot": false,
                "uuid": "5e4777cc-82fb-4b7d-bdc9-d4ed18d63d48",
                "parentUUID": "cc6a739d-1a3e-48aa-b9e6-4c6f3bd224d1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "child <RightNav />",
            "suites": [],
            "tests": [
              {
                "title": "should be passed props rightLinks:array of object with length 2",
                "fullTitle": "<NavigationBar /> child <RightNav /> should be passed props rightLinks:array of object with length 2",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar RightNav = wrapper.find('RightNav');\n(0, _chai.expect)(RightNav.prop('rightLinks').length).to.equal(2);",
                "err": {},
                "isRoot": false,
                "uuid": "a35a03af-c88a-4554-91c5-78aec5acd7cf",
                "parentUUID": "0a24f6b4-5c67-4272-a7c9-e99d0418ad35",
                "skipped": false
              },
              {
                "title": "should be passed props onRightNavButtonClick:func",
                "fullTitle": "<NavigationBar /> child <RightNav /> should be passed props onRightNavButtonClick:func",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar RightNav = wrapper.find('RightNav');\n(0, _chai.expect)((0, _typeof3.default)(RightNav.prop('onRightNavButtonClick'))).to.equal('function');",
                "err": {},
                "isRoot": false,
                "uuid": "6d3b4cf9-d93a-4086-af99-d15ae9ecc01b",
                "parentUUID": "0a24f6b4-5c67-4272-a7c9-e99d0418ad35",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/NavigationBar/NavigationBar.spec.js",
            "uuid": "0a24f6b4-5c67-4272-a7c9-e99d0418ad35",
            "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/NavigationBar/NavigationBar.spec.js",
            "passes": [
              {
                "title": "should be passed props rightLinks:array of object with length 2",
                "fullTitle": "<NavigationBar /> child <RightNav /> should be passed props rightLinks:array of object with length 2",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar RightNav = wrapper.find('RightNav');\n(0, _chai.expect)(RightNav.prop('rightLinks').length).to.equal(2);",
                "err": {},
                "isRoot": false,
                "uuid": "a35a03af-c88a-4554-91c5-78aec5acd7cf",
                "parentUUID": "0a24f6b4-5c67-4272-a7c9-e99d0418ad35",
                "skipped": false
              },
              {
                "title": "should be passed props onRightNavButtonClick:func",
                "fullTitle": "<NavigationBar /> child <RightNav /> should be passed props onRightNavButtonClick:func",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar RightNav = wrapper.find('RightNav');\n(0, _chai.expect)((0, _typeof3.default)(RightNav.prop('onRightNavButtonClick'))).to.equal('function');",
                "err": {},
                "isRoot": false,
                "uuid": "6d3b4cf9-d93a-4086-af99-d15ae9ecc01b",
                "parentUUID": "0a24f6b4-5c67-4272-a7c9-e99d0418ad35",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "child <Humburger />",
            "suites": [],
            "tests": [
              {
                "title": "should exist",
                "fullTitle": "<NavigationBar /> child <Humburger /> should exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar Humburger = wrapper.find('Humburger');\n(0, _chai.expect)(Humburger).to.exist();",
                "err": {},
                "isRoot": false,
                "uuid": "7ce54775-5138-4499-8ad1-3db09a0154c3",
                "parentUUID": "066643a3-6e49-4e8d-a5e7-c7cf64d8b243",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/NavigationBar/NavigationBar.spec.js",
            "uuid": "066643a3-6e49-4e8d-a5e7-c7cf64d8b243",
            "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/NavigationBar/NavigationBar.spec.js",
            "passes": [
              {
                "title": "should exist",
                "fullTitle": "<NavigationBar /> child <Humburger /> should exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar Humburger = wrapper.find('Humburger');\n(0, _chai.expect)(Humburger).to.exist();",
                "err": {},
                "isRoot": false,
                "uuid": "7ce54775-5138-4499-8ad1-3db09a0154c3",
                "parentUUID": "066643a3-6e49-4e8d-a5e7-c7cf64d8b243",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [
          {
            "title": "should render a NavigationBar",
            "fullTitle": "<NavigationBar /> should render a NavigationBar",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\n(0, _chai.expect)(wrapper).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "b4e4f1fc-4c40-48cc-9e4d-3f16b1a12fad",
            "parentUUID": "dd61b2f0-e4ab-4b8e-9188-c1a5cfd432f2",
            "skipped": false
          },
          {
            "title": "should display a brand name",
            "fullTitle": "<NavigationBar /> should display a brand name",
            "timedOut": false,
            "duration": 26,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_components.NavigationBar, props));\n(0, _chai.expect)(wrapper.prop('brand')).to.equal(testBrandName);",
            "err": {},
            "isRoot": false,
            "uuid": "7748c1c7-6270-4f81-9f9d-4dcbb4a5c3cb",
            "parentUUID": "dd61b2f0-e4ab-4b8e-9188-c1a5cfd432f2",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/NavigationBar/NavigationBar.spec.js",
        "uuid": "dd61b2f0-e4ab-4b8e-9188-c1a5cfd432f2",
        "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/NavigationBar/NavigationBar.spec.js",
        "passes": [
          {
            "title": "should render a NavigationBar",
            "fullTitle": "<NavigationBar /> should render a NavigationBar",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\n(0, _chai.expect)(wrapper).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "b4e4f1fc-4c40-48cc-9e4d-3f16b1a12fad",
            "parentUUID": "dd61b2f0-e4ab-4b8e-9188-c1a5cfd432f2",
            "skipped": false
          },
          {
            "title": "should display a brand name",
            "fullTitle": "<NavigationBar /> should display a brand name",
            "timedOut": false,
            "duration": 26,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_components.NavigationBar, props));\n(0, _chai.expect)(wrapper.prop('brand')).to.equal(testBrandName);",
            "err": {},
            "isRoot": false,
            "uuid": "7748c1c7-6270-4f81-9f9d-4dcbb4a5c3cb",
            "parentUUID": "dd61b2f0-e4ab-4b8e-9188-c1a5cfd432f2",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 27
      },
      {
        "title": "<RightNav />",
        "suites": [
          {
            "title": "child <RightNavButton />",
            "suites": [
              {
                "title": "first RightNavButton",
                "suites": [],
                "tests": [
                  {
                    "title": "should be passed props label:string set to mock value",
                    "fullTitle": "child <RightNavButton /> first RightNavButton should be passed props label:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.first().prop('label')).to.equal(rightLinksMock[0].label);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "53d59731-a1fc-4800-8b98-f64d497a3369",
                    "parentUUID": "339541e6-3f79-4964-88d9-f07075705f41",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props link:string set to mock value",
                    "fullTitle": "child <RightNavButton /> first RightNavButton should be passed props link:string set to mock value",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.first().prop('link')).to.equal(rightLinksMock[0].link);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2239cf0b-3415-4f66-98cf-0f3a21ef8ee1",
                    "parentUUID": "339541e6-3f79-4964-88d9-f07075705f41",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props viewName:string set to mock value",
                    "fullTitle": "child <RightNavButton /> first RightNavButton should be passed props viewName:string set to mock value",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.first().prop('viewName')).to.equal(rightLinksMock[0].view);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "80c08c92-61cc-45ff-a77f-91cf8c9f2280",
                    "parentUUID": "339541e6-3f79-4964-88d9-f07075705f41",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props onClick:function to be a function",
                    "fullTitle": "child <RightNavButton /> first RightNavButton should be passed props onClick:function to be a function",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)((0, _typeof3.default)(RightNavButton.first().prop('onClick'))).to.equal('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7e4a4237-38bf-49df-9946-5bcf164ac665",
                    "parentUUID": "339541e6-3f79-4964-88d9-f07075705f41",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/components/NavigationBar/rightNav/RightNav.spec.js",
                "uuid": "339541e6-3f79-4964-88d9-f07075705f41",
                "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/NavigationBar/rightNav/RightNav.spec.js",
                "passes": [
                  {
                    "title": "should be passed props label:string set to mock value",
                    "fullTitle": "child <RightNavButton /> first RightNavButton should be passed props label:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.first().prop('label')).to.equal(rightLinksMock[0].label);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "53d59731-a1fc-4800-8b98-f64d497a3369",
                    "parentUUID": "339541e6-3f79-4964-88d9-f07075705f41",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props link:string set to mock value",
                    "fullTitle": "child <RightNavButton /> first RightNavButton should be passed props link:string set to mock value",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.first().prop('link')).to.equal(rightLinksMock[0].link);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2239cf0b-3415-4f66-98cf-0f3a21ef8ee1",
                    "parentUUID": "339541e6-3f79-4964-88d9-f07075705f41",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props viewName:string set to mock value",
                    "fullTitle": "child <RightNavButton /> first RightNavButton should be passed props viewName:string set to mock value",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.first().prop('viewName')).to.equal(rightLinksMock[0].view);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "80c08c92-61cc-45ff-a77f-91cf8c9f2280",
                    "parentUUID": "339541e6-3f79-4964-88d9-f07075705f41",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props onClick:function to be a function",
                    "fullTitle": "child <RightNavButton /> first RightNavButton should be passed props onClick:function to be a function",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)((0, _typeof3.default)(RightNavButton.first().prop('onClick'))).to.equal('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7e4a4237-38bf-49df-9946-5bcf164ac665",
                    "parentUUID": "339541e6-3f79-4964-88d9-f07075705f41",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 3
              },
              {
                "title": "second RightNavButton",
                "suites": [],
                "tests": [
                  {
                    "title": "should be passed props label:string set to mock value",
                    "fullTitle": "child <RightNavButton /> second RightNavButton should be passed props label:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.at(secondRightNavButtonIndex).prop('label')).to.equal(rightLinksMock[secondRightNavButtonIndex].label);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "90105e13-a966-4853-be7b-c0ea179bfbe3",
                    "parentUUID": "fa3498e6-645a-40a7-b7a3-5b09a0df188d",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props link:string set to mock value",
                    "fullTitle": "child <RightNavButton /> second RightNavButton should be passed props link:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.at(secondRightNavButtonIndex).prop('link')).to.equal(rightLinksMock[secondRightNavButtonIndex].link);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8e552564-d10d-4e76-95c2-d362e2124cb0",
                    "parentUUID": "fa3498e6-645a-40a7-b7a3-5b09a0df188d",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props viewName:string set to mock value",
                    "fullTitle": "child <RightNavButton /> second RightNavButton should be passed props viewName:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.at(secondRightNavButtonIndex).prop('viewName')).to.equal(rightLinksMock[secondRightNavButtonIndex].view);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "20d896f7-fe69-4d30-96c8-76a2e3ac7743",
                    "parentUUID": "fa3498e6-645a-40a7-b7a3-5b09a0df188d",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props onClick:function to be a function",
                    "fullTitle": "child <RightNavButton /> second RightNavButton should be passed props onClick:function to be a function",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)((0, _typeof3.default)(RightNavButton.at(secondRightNavButtonIndex).prop('onClick'))).to.equal('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bb804a6a-6d0d-4e9b-942b-f9ecb553fd5f",
                    "parentUUID": "fa3498e6-645a-40a7-b7a3-5b09a0df188d",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/components/NavigationBar/rightNav/RightNav.spec.js",
                "uuid": "fa3498e6-645a-40a7-b7a3-5b09a0df188d",
                "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/NavigationBar/rightNav/RightNav.spec.js",
                "passes": [
                  {
                    "title": "should be passed props label:string set to mock value",
                    "fullTitle": "child <RightNavButton /> second RightNavButton should be passed props label:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.at(secondRightNavButtonIndex).prop('label')).to.equal(rightLinksMock[secondRightNavButtonIndex].label);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "90105e13-a966-4853-be7b-c0ea179bfbe3",
                    "parentUUID": "fa3498e6-645a-40a7-b7a3-5b09a0df188d",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props link:string set to mock value",
                    "fullTitle": "child <RightNavButton /> second RightNavButton should be passed props link:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.at(secondRightNavButtonIndex).prop('link')).to.equal(rightLinksMock[secondRightNavButtonIndex].link);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8e552564-d10d-4e76-95c2-d362e2124cb0",
                    "parentUUID": "fa3498e6-645a-40a7-b7a3-5b09a0df188d",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props viewName:string set to mock value",
                    "fullTitle": "child <RightNavButton /> second RightNavButton should be passed props viewName:string set to mock value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.at(secondRightNavButtonIndex).prop('viewName')).to.equal(rightLinksMock[secondRightNavButtonIndex].view);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "20d896f7-fe69-4d30-96c8-76a2e3ac7743",
                    "parentUUID": "fa3498e6-645a-40a7-b7a3-5b09a0df188d",
                    "skipped": false
                  },
                  {
                    "title": "should be passed props onClick:function to be a function",
                    "fullTitle": "child <RightNavButton /> second RightNavButton should be passed props onClick:function to be a function",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)((0, _typeof3.default)(RightNavButton.at(secondRightNavButtonIndex).prop('onClick'))).to.equal('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bb804a6a-6d0d-4e9b-942b-f9ecb553fd5f",
                    "parentUUID": "fa3498e6-645a-40a7-b7a3-5b09a0df188d",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              }
            ],
            "tests": [
              {
                "title": "should exist",
                "fullTitle": "<RightNav /> child <RightNavButton /> should exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton).to.exist();",
                "err": {},
                "isRoot": false,
                "uuid": "ffc5b70b-a3b1-44e6-92a5-cca807accd84",
                "parentUUID": "4570481f-0bfc-4e37-88a6-96dd670ba2b0",
                "skipped": false
              },
              {
                "title": "should be 2 RightNavButton",
                "fullTitle": "<RightNav /> child <RightNavButton /> should be 2 RightNavButton",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.length).to.equal(2);",
                "err": {},
                "isRoot": false,
                "uuid": "aac82ebe-22c7-413f-be46-5558e4f2c1fd",
                "parentUUID": "4570481f-0bfc-4e37-88a6-96dd670ba2b0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/NavigationBar/rightNav/RightNav.spec.js",
            "uuid": "4570481f-0bfc-4e37-88a6-96dd670ba2b0",
            "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/NavigationBar/rightNav/RightNav.spec.js",
            "passes": [
              {
                "title": "should exist",
                "fullTitle": "<RightNav /> child <RightNavButton /> should exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton).to.exist();",
                "err": {},
                "isRoot": false,
                "uuid": "ffc5b70b-a3b1-44e6-92a5-cca807accd84",
                "parentUUID": "4570481f-0bfc-4e37-88a6-96dd670ba2b0",
                "skipped": false
              },
              {
                "title": "should be 2 RightNavButton",
                "fullTitle": "<RightNav /> child <RightNavButton /> should be 2 RightNavButton",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.length).to.equal(2);",
                "err": {},
                "isRoot": false,
                "uuid": "aac82ebe-22c7-413f-be46-5558e4f2c1fd",
                "parentUUID": "4570481f-0bfc-4e37-88a6-96dd670ba2b0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [
          {
            "title": "should render a RightNav",
            "fullTitle": "<RightNav /> should render a RightNav",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "8a266c4f-2ad7-4d39-a218-9c6eef06b7f3",
            "parentUUID": "9a0324a4-e42a-49fd-ada9-63d040b043ad",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/NavigationBar/rightNav/RightNav.spec.js",
        "uuid": "9a0324a4-e42a-49fd-ada9-63d040b043ad",
        "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/NavigationBar/rightNav/RightNav.spec.js",
        "passes": [
          {
            "title": "should render a RightNav",
            "fullTitle": "<RightNav /> should render a RightNav",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "8a266c4f-2ad7-4d39-a218-9c6eef06b7f3",
            "parentUUID": "9a0324a4-e42a-49fd-ada9-63d040b043ad",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      {
        "title": "<LeftNavButton />",
        "suites": [
          {
            "title": "child <Link />",
            "suites": [],
            "tests": [
              {
                "title": "should exist",
                "fullTitle": "<LeftNavButton /> child <Link /> should exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, props));\nvar Link = wrapper.find('Link');\n(0, _chai.expect)(Link).to.exist();",
                "err": {},
                "isRoot": false,
                "uuid": "a0bd8ddd-40da-4d01-8721-af32db8d81fb",
                "parentUUID": "a879f4de-ad12-4c02-85e6-bab6eb0dc501",
                "skipped": false
              },
              {
                "title": "should trigger a navigation on left link click",
                "fullTitle": "<LeftNavButton /> child <Link /> should trigger a navigation on left link click",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var event = {};\nvar onClickStub = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, (0, _extends3.default)({}, props, {\n  onClick: onClickStub\n})));\nvar Link = wrapper.find('Link');\nLink.simulate('click', event);\n(0, _chai.expect)(onClickStub.calledOnce).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "2636787c-b93d-49b4-a271-f4b29f665a56",
                "parentUUID": "a879f4de-ad12-4c02-85e6-bab6eb0dc501",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/NavigationBar/rightNav/rightNavButton/RightNavButton.spec.js",
            "uuid": "a879f4de-ad12-4c02-85e6-bab6eb0dc501",
            "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/NavigationBar/rightNav/rightNavButton/RightNavButton.spec.js",
            "passes": [
              {
                "title": "should exist",
                "fullTitle": "<LeftNavButton /> child <Link /> should exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, props));\nvar Link = wrapper.find('Link');\n(0, _chai.expect)(Link).to.exist();",
                "err": {},
                "isRoot": false,
                "uuid": "a0bd8ddd-40da-4d01-8721-af32db8d81fb",
                "parentUUID": "a879f4de-ad12-4c02-85e6-bab6eb0dc501",
                "skipped": false
              },
              {
                "title": "should trigger a navigation on left link click",
                "fullTitle": "<LeftNavButton /> child <Link /> should trigger a navigation on left link click",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var event = {};\nvar onClickStub = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, (0, _extends3.default)({}, props, {\n  onClick: onClickStub\n})));\nvar Link = wrapper.find('Link');\nLink.simulate('click', event);\n(0, _chai.expect)(onClickStub.calledOnce).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "2636787c-b93d-49b4-a271-f4b29f665a56",
                "parentUUID": "a879f4de-ad12-4c02-85e6-bab6eb0dc501",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [
          {
            "title": "should render a LeftNavButton",
            "fullTitle": "<LeftNavButton /> should render a LeftNavButton",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "da2159a5-4911-41d3-9f8d-0901d6cac100",
            "parentUUID": "7343372c-13d1-4734-9e3a-8fc234bc5da4",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/NavigationBar/rightNav/rightNavButton/RightNavButton.spec.js",
        "uuid": "7343372c-13d1-4734-9e3a-8fc234bc5da4",
        "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/components/NavigationBar/rightNav/rightNavButton/RightNavButton.spec.js",
        "passes": [
          {
            "title": "should render a LeftNavButton",
            "fullTitle": "<LeftNavButton /> should render a LeftNavButton",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
            "err": {},
            "isRoot": false,
            "uuid": "da2159a5-4911-41d3-9f8d-0901d6cac100",
            "parentUUID": "7343372c-13d1-4734-9e3a-8fc234bc5da4",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "App",
        "suites": [],
        "tests": [
          {
            "title": "should render <App />",
            "fullTitle": "App should render <App />",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _chai.expect)(wrapper.find('NavigationBar').length).to.equal(1);",
            "err": {},
            "isRoot": false,
            "uuid": "8dc86268-65c1-4348-b93d-ff679d9873be",
            "parentUUID": "e33aec10-1990-4607-b639-2873a678ea0a",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/containers/app/App.spec.js",
        "uuid": "e33aec10-1990-4607-b639-2873a678ea0a",
        "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/containers/app/App.spec.js",
        "passes": [
          {
            "title": "should render <App />",
            "fullTitle": "App should render <App />",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _chai.expect)(wrapper.find('NavigationBar').length).to.equal(1);",
            "err": {},
            "isRoot": false,
            "uuid": "8dc86268-65c1-4348-b93d-ff679d9873be",
            "parentUUID": "e33aec10-1990-4607-b639-2873a678ea0a",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "About VIEW ",
        "suites": [],
        "tests": [
          {
            "title": "should render \"About\" view",
            "fullTitle": "About VIEW  should render \"About\" view",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_About2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.containsMatchingElement(_react2.default.createElement(\n  'h1',\n  null,\n  'About'\n)));",
            "err": {},
            "isRoot": false,
            "uuid": "89e81c11-9459-400d-9b39-2ac05a379f8e",
            "parentUUID": "77208a40-036f-41af-9c18-9b58692c8efa",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/views/about/About.spec.js",
        "uuid": "77208a40-036f-41af-9c18-9b58692c8efa",
        "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/views/about/About.spec.js",
        "passes": [
          {
            "title": "should render \"About\" view",
            "fullTitle": "About VIEW  should render \"About\" view",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_About2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.containsMatchingElement(_react2.default.createElement(\n  'h1',\n  null,\n  'About'\n)));",
            "err": {},
            "isRoot": false,
            "uuid": "89e81c11-9459-400d-9b39-2ac05a379f8e",
            "parentUUID": "77208a40-036f-41af-9c18-9b58692c8efa",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 2
      },
      {
        "title": "Components VIEW ",
        "suites": [],
        "tests": [
          {
            "title": "should render \"Components\" view",
            "fullTitle": "Components VIEW  should render \"Components\" view",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Components2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.containsMatchingElement(_react2.default.createElement(\n  'h1',\n  null,\n  'Components'\n)));",
            "err": {},
            "isRoot": false,
            "uuid": "cab8c5cd-5764-47d6-a801-50968629e181",
            "parentUUID": "60c40c4b-7a65-4789-94e1-ac70c3e0bf08",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/views/components/Components.spec.js",
        "uuid": "60c40c4b-7a65-4789-94e1-ac70c3e0bf08",
        "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/views/components/Components.spec.js",
        "passes": [
          {
            "title": "should render \"Components\" view",
            "fullTitle": "Components VIEW  should render \"Components\" view",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Components2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.containsMatchingElement(_react2.default.createElement(\n  'h1',\n  null,\n  'Components'\n)));",
            "err": {},
            "isRoot": false,
            "uuid": "cab8c5cd-5764-47d6-a801-50968629e181",
            "parentUUID": "60c40c4b-7a65-4789-94e1-ac70c3e0bf08",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      {
        "title": "Home VIEW ",
        "suites": [],
        "tests": [
          {
            "title": "should render \"Home\" view",
            "fullTitle": "Home VIEW  should render \"Home\" view",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Home2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('Jumbotron').length).to.equal(1);",
            "err": {},
            "isRoot": false,
            "uuid": "4c15e272-bbb0-420c-87fb-c4926858924b",
            "parentUUID": "a37fbe9e-f5ff-4df4-a8f0-e6a43ccbcf83",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/views/home/Home.spec.js",
        "uuid": "a37fbe9e-f5ff-4df4-a8f0-e6a43ccbcf83",
        "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/views/home/Home.spec.js",
        "passes": [
          {
            "title": "should render \"Home\" view",
            "fullTitle": "Home VIEW  should render \"Home\" view",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Home2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('Jumbotron').length).to.equal(1);",
            "err": {},
            "isRoot": false,
            "uuid": "4c15e272-bbb0-420c-87fb-c4926858924b",
            "parentUUID": "a37fbe9e-f5ff-4df4-a8f0-e6a43ccbcf83",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      {
        "title": "AddNewPhoneComponent ",
        "suites": [
          {
            "title": "#seeForm",
            "suites": [],
            "tests": [
              {
                "title": "should change state.displayForm",
                "fullTitle": "AddNewPhoneComponent  #seeForm should change state.displayForm",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(0, _chai.expect)(wrapper.state().displayForm).to.equal(false);\nwrapper.instance().seeForm();\n(0, _chai.expect)(wrapper.state().displayForm).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "ba4da4da-293b-4f76-962c-4e2c7c900ce1",
                "parentUUID": "d25e0b4d-3aa6-4b68-81c0-fb78ae0149c9",
                "skipped": false
              },
              {
                "title": "should change state.displayForm using button",
                "fullTitle": "AddNewPhoneComponent  #seeForm should change state.displayForm using button",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(0, _chai.expect)(wrapper.state().displayForm).to.equal(false);\n(0, _chai.expect)(wrapper.find('button').first().text()).to.equal('Add new');\nwrapper.find('button').first().simulate('click');\n(0, _chai.expect)(wrapper.state().displayForm).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "01f97675-3f5b-430f-aec0-f5da4bdb4ce2",
                "parentUUID": "d25e0b4d-3aa6-4b68-81c0-fb78ae0149c9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/views/simonTask/AddNewPhoneComponent.spec.js",
            "uuid": "d25e0b4d-3aa6-4b68-81c0-fb78ae0149c9",
            "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/views/simonTask/AddNewPhoneComponent.spec.js",
            "passes": [
              {
                "title": "should change state.displayForm",
                "fullTitle": "AddNewPhoneComponent  #seeForm should change state.displayForm",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(0, _chai.expect)(wrapper.state().displayForm).to.equal(false);\nwrapper.instance().seeForm();\n(0, _chai.expect)(wrapper.state().displayForm).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "ba4da4da-293b-4f76-962c-4e2c7c900ce1",
                "parentUUID": "d25e0b4d-3aa6-4b68-81c0-fb78ae0149c9",
                "skipped": false
              },
              {
                "title": "should change state.displayForm using button",
                "fullTitle": "AddNewPhoneComponent  #seeForm should change state.displayForm using button",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(0, _chai.expect)(wrapper.state().displayForm).to.equal(false);\n(0, _chai.expect)(wrapper.find('button').first().text()).to.equal('Add new');\nwrapper.find('button').first().simulate('click');\n(0, _chai.expect)(wrapper.state().displayForm).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "01f97675-3f5b-430f-aec0-f5da4bdb4ce2",
                "parentUUID": "d25e0b4d-3aa6-4b68-81c0-fb78ae0149c9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#handleChange",
            "suites": [],
            "tests": [
              {
                "title": "should have state.newPhone object with two keys",
                "fullTitle": "AddNewPhoneComponent  #handleChange should have state.newPhone object with two keys",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(0, _chai.expect)((0, _lodash.keys)(wrapper.state().newPhone).length).to.equal(2);\n(0, _chai.expect)((0, _lodash.keys)(wrapper.state().newPhone)[0]).to.equal('name');\n(0, _chai.expect)((0, _lodash.keys)(wrapper.state().newPhone)[1]).to.equal('value');",
                "err": {},
                "isRoot": false,
                "uuid": "33af4310-9c21-43d4-9227-d2f389b4db04",
                "parentUUID": "d4796e55-de1c-4b88-b712-1a0f4f984dcd",
                "skipped": false
              },
              {
                "title": "should automatic change name of state.newPhone object",
                "fullTitle": "AddNewPhoneComponent  #handleChange should automatic change name of state.newPhone object",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wrapper.instance().seeForm();\nvar textField = wrapper.find('InputWithoutValue').first();\nvar event = { key: 'Enter', target: { value: 'mock', name: 'name' } };\ntextField.simulate('change', event);\n(0, _chai.expect)(wrapper.state().newPhone['name']).to.equal('mock');\n(0, _chai.expect)(wrapper.state().newPhone['value']).to.equal('');",
                "err": {},
                "isRoot": false,
                "uuid": "33f8095e-2c7a-4cd2-9f6f-7ec7b4421e4a",
                "parentUUID": "d4796e55-de1c-4b88-b712-1a0f4f984dcd",
                "skipped": false
              },
              {
                "title": "should automatic change value of state.newPhone object",
                "fullTitle": "AddNewPhoneComponent  #handleChange should automatic change value of state.newPhone object",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wrapper.instance().seeForm();\nvar textField = wrapper.find('InputWithoutValue').last();\nvar event = { key: 'Enter', target: { value: 'mock2', name: 'value' } };\ntextField.simulate('change', event);\n(0, _chai.expect)(wrapper.state().newPhone['name']).to.equal('');\n(0, _chai.expect)(wrapper.state().newPhone['value']).to.equal('mock2');",
                "err": {},
                "isRoot": false,
                "uuid": "50bccdc6-dc3d-4b92-8012-56345624e881",
                "parentUUID": "d4796e55-de1c-4b88-b712-1a0f4f984dcd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/views/simonTask/AddNewPhoneComponent.spec.js",
            "uuid": "d4796e55-de1c-4b88-b712-1a0f4f984dcd",
            "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/views/simonTask/AddNewPhoneComponent.spec.js",
            "passes": [
              {
                "title": "should have state.newPhone object with two keys",
                "fullTitle": "AddNewPhoneComponent  #handleChange should have state.newPhone object with two keys",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(0, _chai.expect)((0, _lodash.keys)(wrapper.state().newPhone).length).to.equal(2);\n(0, _chai.expect)((0, _lodash.keys)(wrapper.state().newPhone)[0]).to.equal('name');\n(0, _chai.expect)((0, _lodash.keys)(wrapper.state().newPhone)[1]).to.equal('value');",
                "err": {},
                "isRoot": false,
                "uuid": "33af4310-9c21-43d4-9227-d2f389b4db04",
                "parentUUID": "d4796e55-de1c-4b88-b712-1a0f4f984dcd",
                "skipped": false
              },
              {
                "title": "should automatic change name of state.newPhone object",
                "fullTitle": "AddNewPhoneComponent  #handleChange should automatic change name of state.newPhone object",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wrapper.instance().seeForm();\nvar textField = wrapper.find('InputWithoutValue').first();\nvar event = { key: 'Enter', target: { value: 'mock', name: 'name' } };\ntextField.simulate('change', event);\n(0, _chai.expect)(wrapper.state().newPhone['name']).to.equal('mock');\n(0, _chai.expect)(wrapper.state().newPhone['value']).to.equal('');",
                "err": {},
                "isRoot": false,
                "uuid": "33f8095e-2c7a-4cd2-9f6f-7ec7b4421e4a",
                "parentUUID": "d4796e55-de1c-4b88-b712-1a0f4f984dcd",
                "skipped": false
              },
              {
                "title": "should automatic change value of state.newPhone object",
                "fullTitle": "AddNewPhoneComponent  #handleChange should automatic change value of state.newPhone object",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wrapper.instance().seeForm();\nvar textField = wrapper.find('InputWithoutValue').last();\nvar event = { key: 'Enter', target: { value: 'mock2', name: 'value' } };\ntextField.simulate('change', event);\n(0, _chai.expect)(wrapper.state().newPhone['name']).to.equal('');\n(0, _chai.expect)(wrapper.state().newPhone['value']).to.equal('mock2');",
                "err": {},
                "isRoot": false,
                "uuid": "50bccdc6-dc3d-4b92-8012-56345624e881",
                "parentUUID": "d4796e55-de1c-4b88-b712-1a0f4f984dcd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "#addNew",
            "suites": [],
            "tests": [
              {
                "title": "add new object into props",
                "fullTitle": "AddNewPhoneComponent  #addNew add new object into props",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wrapper.instance().seeForm();\nvar textField = wrapper.find('InputWithoutValue').first();\nvar event = { key: 'Enter', target: { value: 'mock', name: 'name' } };\ntextField.simulate('change', event);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones.length).to.equal(4);\nwrapper.instance().addNew();\n(0, _chai.expect)(wrapper.state().newPhone['name']).to.equal('');\n(0, _chai.expect)(wrapper.state().newPhone['value']).to.equal('');\n(0, _chai.expect)(wrapper.state().displayForm).to.equal(false);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones.length).to.equal(5);",
                "err": {},
                "isRoot": false,
                "uuid": "77e61e8f-be5b-4ece-8a09-d06c0266fe6c",
                "parentUUID": "1b0e59cf-6973-4556-baca-88b57a045292",
                "skipped": false
              },
              {
                "title": "should add new object after click btn",
                "fullTitle": "AddNewPhoneComponent  #addNew should add new object after click btn",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wrapper.instance().seeForm();\nvar textField = wrapper.find('InputWithoutValue').first();\nvar event = { key: 'Enter', target: { value: 'mock', name: 'name' } };\ntextField.simulate('change', event);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones.length).to.equal(4);\n(0, _chai.expect)(wrapper.find('button').last().text()).to.equal('Add');\nwrapper.find('button').last().simulate('click');\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones.length).to.equal(5);",
                "err": {},
                "isRoot": false,
                "uuid": "b68fff3c-d28b-45e7-bfb7-1b6ade386e7b",
                "parentUUID": "1b0e59cf-6973-4556-baca-88b57a045292",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/views/simonTask/AddNewPhoneComponent.spec.js",
            "uuid": "1b0e59cf-6973-4556-baca-88b57a045292",
            "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/views/simonTask/AddNewPhoneComponent.spec.js",
            "passes": [
              {
                "title": "add new object into props",
                "fullTitle": "AddNewPhoneComponent  #addNew add new object into props",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wrapper.instance().seeForm();\nvar textField = wrapper.find('InputWithoutValue').first();\nvar event = { key: 'Enter', target: { value: 'mock', name: 'name' } };\ntextField.simulate('change', event);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones.length).to.equal(4);\nwrapper.instance().addNew();\n(0, _chai.expect)(wrapper.state().newPhone['name']).to.equal('');\n(0, _chai.expect)(wrapper.state().newPhone['value']).to.equal('');\n(0, _chai.expect)(wrapper.state().displayForm).to.equal(false);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones.length).to.equal(5);",
                "err": {},
                "isRoot": false,
                "uuid": "77e61e8f-be5b-4ece-8a09-d06c0266fe6c",
                "parentUUID": "1b0e59cf-6973-4556-baca-88b57a045292",
                "skipped": false
              },
              {
                "title": "should add new object after click btn",
                "fullTitle": "AddNewPhoneComponent  #addNew should add new object after click btn",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wrapper.instance().seeForm();\nvar textField = wrapper.find('InputWithoutValue').first();\nvar event = { key: 'Enter', target: { value: 'mock', name: 'name' } };\ntextField.simulate('change', event);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones.length).to.equal(4);\n(0, _chai.expect)(wrapper.find('button').last().text()).to.equal('Add');\nwrapper.find('button').last().simulate('click');\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones.length).to.equal(5);",
                "err": {},
                "isRoot": false,
                "uuid": "b68fff3c-d28b-45e7-bfb7-1b6ade386e7b",
                "parentUUID": "1b0e59cf-6973-4556-baca-88b57a045292",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [
          {
            "title": "should render \"AddNewPhoneComponent\" with markup",
            "fullTitle": "AddNewPhoneComponent  should render \"AddNewPhoneComponent\" with markup",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('button').length).to.equal(1);\n(0, _chai.expect)(wrapper.find('button').text()).to.equal('Add new');",
            "err": {},
            "isRoot": false,
            "uuid": "15c8cc68-edcc-4c13-9fc3-a254bb8bc4c4",
            "parentUUID": "97a70dde-d209-461c-a884-43eac7481566",
            "skipped": false
          },
          {
            "title": "should display markup after change state.displayForm",
            "fullTitle": "AddNewPhoneComponent  should display markup after change state.displayForm",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _chai.expect)(wrapper.find('label').length).to.equal(0);\nwrapper.instance().seeForm();\n(0, _chai.expect)(wrapper.find('label').length).to.equal(2);",
            "err": {},
            "isRoot": false,
            "uuid": "bb2cb88a-98c4-475c-944f-d6935d13fec9",
            "parentUUID": "97a70dde-d209-461c-a884-43eac7481566",
            "skipped": false
          },
          {
            "title": "should cover two class names \"col-xs-6\" ",
            "fullTitle": "AddNewPhoneComponent  should cover two class names \"col-xs-6\" ",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wrapper.instance().seeForm();\n(0, _chai.expect)(wrapper.find('.col-xs-6').length).to.equal(2);",
            "err": {},
            "isRoot": false,
            "uuid": "296aa42b-29ea-441c-b1bf-d15c8fc5e132",
            "parentUUID": "97a70dde-d209-461c-a884-43eac7481566",
            "skipped": false
          },
          {
            "title": "should have state object with two keys",
            "fullTitle": "AddNewPhoneComponent  should have state object with two keys",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _chai.expect)((0, _lodash.keys)(wrapper.state()).length).to.equal(2);\n(0, _chai.expect)((0, _lodash.keys)(wrapper.state())[0]).to.equal('displayForm');\n(0, _chai.expect)((0, _lodash.keys)(wrapper.state())[1]).to.equal('newPhone');",
            "err": {},
            "isRoot": false,
            "uuid": "f8e302ac-d7e3-41c9-9d1e-5df1b5ecc24a",
            "parentUUID": "97a70dde-d209-461c-a884-43eac7481566",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/views/simonTask/AddNewPhoneComponent.spec.js",
        "uuid": "97a70dde-d209-461c-a884-43eac7481566",
        "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/views/simonTask/AddNewPhoneComponent.spec.js",
        "passes": [
          {
            "title": "should render \"AddNewPhoneComponent\" with markup",
            "fullTitle": "AddNewPhoneComponent  should render \"AddNewPhoneComponent\" with markup",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('button').length).to.equal(1);\n(0, _chai.expect)(wrapper.find('button').text()).to.equal('Add new');",
            "err": {},
            "isRoot": false,
            "uuid": "15c8cc68-edcc-4c13-9fc3-a254bb8bc4c4",
            "parentUUID": "97a70dde-d209-461c-a884-43eac7481566",
            "skipped": false
          },
          {
            "title": "should display markup after change state.displayForm",
            "fullTitle": "AddNewPhoneComponent  should display markup after change state.displayForm",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _chai.expect)(wrapper.find('label').length).to.equal(0);\nwrapper.instance().seeForm();\n(0, _chai.expect)(wrapper.find('label').length).to.equal(2);",
            "err": {},
            "isRoot": false,
            "uuid": "bb2cb88a-98c4-475c-944f-d6935d13fec9",
            "parentUUID": "97a70dde-d209-461c-a884-43eac7481566",
            "skipped": false
          },
          {
            "title": "should cover two class names \"col-xs-6\" ",
            "fullTitle": "AddNewPhoneComponent  should cover two class names \"col-xs-6\" ",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wrapper.instance().seeForm();\n(0, _chai.expect)(wrapper.find('.col-xs-6').length).to.equal(2);",
            "err": {},
            "isRoot": false,
            "uuid": "296aa42b-29ea-441c-b1bf-d15c8fc5e132",
            "parentUUID": "97a70dde-d209-461c-a884-43eac7481566",
            "skipped": false
          },
          {
            "title": "should have state object with two keys",
            "fullTitle": "AddNewPhoneComponent  should have state object with two keys",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _chai.expect)((0, _lodash.keys)(wrapper.state()).length).to.equal(2);\n(0, _chai.expect)((0, _lodash.keys)(wrapper.state())[0]).to.equal('displayForm');\n(0, _chai.expect)((0, _lodash.keys)(wrapper.state())[1]).to.equal('newPhone');",
            "err": {},
            "isRoot": false,
            "uuid": "f8e302ac-d7e3-41c9-9d1e-5df1b5ecc24a",
            "parentUUID": "97a70dde-d209-461c-a884-43eac7481566",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 4
      },
      {
        "title": "ColorComponent ",
        "suites": [],
        "tests": [
          {
            "title": "should render \"ColorComponent\" with markup",
            "fullTitle": "ColorComponent  should render \"ColorComponent\" with markup",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_ColorComponent2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('h2').length).to.equal(1);\n(0, _chai.expect)(wrapper.find('p').length).to.equal(1);\n(0, _chai.expect)((0, _typeof3.default)(wrapper.find('div').children().nodes[2].type)).to.equal('function');",
            "err": {},
            "isRoot": false,
            "uuid": "840affc7-c092-4a13-b776-b11044023193",
            "parentUUID": "f9426263-3b21-4583-85fe-88681d8aef87",
            "skipped": false
          },
          {
            "title": "h2 should contain text \"Color Schema\"",
            "fullTitle": "ColorComponent  h2 should contain text \"Color Schema\"",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_ColorComponent2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('p').text()).to.equal('Dark schema');",
            "err": {},
            "isRoot": false,
            "uuid": "7e8b4689-1b23-49f8-b063-e665cfc9145d",
            "parentUUID": "f9426263-3b21-4583-85fe-88681d8aef87",
            "skipped": false
          },
          {
            "title": "p should contain text \"Dark schema\"",
            "fullTitle": "ColorComponent  p should contain text \"Dark schema\"",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_ColorComponent2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('p').text()).to.equal('Dark schema');",
            "err": {},
            "isRoot": false,
            "uuid": "4a5f7786-5d12-4ebc-bf5e-78c740aee20e",
            "parentUUID": "f9426263-3b21-4583-85fe-88681d8aef87",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/views/simonTask/ColorComponent.spec.js",
        "uuid": "f9426263-3b21-4583-85fe-88681d8aef87",
        "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/views/simonTask/ColorComponent.spec.js",
        "passes": [
          {
            "title": "should render \"ColorComponent\" with markup",
            "fullTitle": "ColorComponent  should render \"ColorComponent\" with markup",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_ColorComponent2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('h2').length).to.equal(1);\n(0, _chai.expect)(wrapper.find('p').length).to.equal(1);\n(0, _chai.expect)((0, _typeof3.default)(wrapper.find('div').children().nodes[2].type)).to.equal('function');",
            "err": {},
            "isRoot": false,
            "uuid": "840affc7-c092-4a13-b776-b11044023193",
            "parentUUID": "f9426263-3b21-4583-85fe-88681d8aef87",
            "skipped": false
          },
          {
            "title": "h2 should contain text \"Color Schema\"",
            "fullTitle": "ColorComponent  h2 should contain text \"Color Schema\"",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_ColorComponent2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('p').text()).to.equal('Dark schema');",
            "err": {},
            "isRoot": false,
            "uuid": "7e8b4689-1b23-49f8-b063-e665cfc9145d",
            "parentUUID": "f9426263-3b21-4583-85fe-88681d8aef87",
            "skipped": false
          },
          {
            "title": "p should contain text \"Dark schema\"",
            "fullTitle": "ColorComponent  p should contain text \"Dark schema\"",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_ColorComponent2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('p').text()).to.equal('Dark schema');",
            "err": {},
            "isRoot": false,
            "uuid": "4a5f7786-5d12-4ebc-bf5e-78c740aee20e",
            "parentUUID": "f9426263-3b21-4583-85fe-88681d8aef87",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      {
        "title": "AddNewPhoneComponent ",
        "suites": [
          {
            "title": "#toggleNotificationSetting",
            "suites": [],
            "tests": [
              {
                "title": "should change state of checkbox with key \"checked\"",
                "fullTitle": "AddNewPhoneComponent  #toggleNotificationSetting should change state of checkbox with key \"checked\"",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapperInstance = wrapper.instance();\nvar wrapperProps = wrapperInstance.props;\nvar secondPhone = wrapperProps.dataBase.phones[2];\n(0, _chai.expect)(secondPhone.checked).to.equal(false);\nwrapperInstance.toggleNotificationSetting(secondPhone, 'checked');\n(0, _chai.expect)(secondPhone.checked).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "c7de64dc-8ffe-4c79-bae9-4e6cdd3e9b56",
                "parentUUID": "05e100c6-9f21-4593-b4ed-3fe3940b4932",
                "skipped": false
              },
              {
                "title": "should change state of checkbox with key \"highPriority\"",
                "fullTitle": "AddNewPhoneComponent  #toggleNotificationSetting should change state of checkbox with key \"highPriority\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapperInstance = wrapper.instance();\nvar wrapperProps = wrapperInstance.props;\nvar secondPhone = wrapperProps.dataBase.phones[0];\n(0, _chai.expect)(secondPhone.highPriority).to.equal(true);\nwrapperInstance.toggleNotificationSetting(secondPhone, 'highPriority');\n(0, _chai.expect)(secondPhone.highPriority).to.equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "f34d0fd6-fc91-4519-8c24-fc31f8819462",
                "parentUUID": "05e100c6-9f21-4593-b4ed-3fe3940b4932",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/views/simonTask/NotificationComponent.spec.js",
            "uuid": "05e100c6-9f21-4593-b4ed-3fe3940b4932",
            "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/views/simonTask/NotificationComponent.spec.js",
            "passes": [
              {
                "title": "should change state of checkbox with key \"checked\"",
                "fullTitle": "AddNewPhoneComponent  #toggleNotificationSetting should change state of checkbox with key \"checked\"",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapperInstance = wrapper.instance();\nvar wrapperProps = wrapperInstance.props;\nvar secondPhone = wrapperProps.dataBase.phones[2];\n(0, _chai.expect)(secondPhone.checked).to.equal(false);\nwrapperInstance.toggleNotificationSetting(secondPhone, 'checked');\n(0, _chai.expect)(secondPhone.checked).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "c7de64dc-8ffe-4c79-bae9-4e6cdd3e9b56",
                "parentUUID": "05e100c6-9f21-4593-b4ed-3fe3940b4932",
                "skipped": false
              },
              {
                "title": "should change state of checkbox with key \"highPriority\"",
                "fullTitle": "AddNewPhoneComponent  #toggleNotificationSetting should change state of checkbox with key \"highPriority\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapperInstance = wrapper.instance();\nvar wrapperProps = wrapperInstance.props;\nvar secondPhone = wrapperProps.dataBase.phones[0];\n(0, _chai.expect)(secondPhone.highPriority).to.equal(true);\nwrapperInstance.toggleNotificationSetting(secondPhone, 'highPriority');\n(0, _chai.expect)(secondPhone.highPriority).to.equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "f34d0fd6-fc91-4519-8c24-fc31f8819462",
                "parentUUID": "05e100c6-9f21-4593-b4ed-3fe3940b4932",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#renderCheckboxes",
            "suites": [],
            "tests": [
              {
                "title": "render four tr from database.phones",
                "fullTitle": "AddNewPhoneComponent  #renderCheckboxes render four tr from database.phones",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var renderCheckboxes = wrapper.instance().renderCheckboxes();\n(0, _chai.expect)(renderCheckboxes.length).to.equal(4);\n(0, _chai.expect)(renderCheckboxes[2].type).to.equal('tr');\n(0, _chai.expect)(renderCheckboxes[2].key).to.equal('2');",
                "err": {},
                "isRoot": false,
                "uuid": "3a981c9f-bb3c-495c-95e8-865e40b2f40d",
                "parentUUID": "8a1240da-b95d-4d0d-8994-8a65b34ed195",
                "skipped": false
              },
              {
                "title": "each tr has three td",
                "fullTitle": "AddNewPhoneComponent  #renderCheckboxes each tr has three td",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var renderCheckboxes = wrapper.instance().renderCheckboxes();\nvar checkAllTypesAndLength = (0, _lodash.every)(renderCheckboxes, function (item) {\n  var checkLengthOfItem = item.props.children.length == 3;\n  var checkAllItemsChildren = (0, _lodash.every)(item.props.children, function (itemChild) {\n    return itemChild.type == 'td';\n  });\n  return checkLengthOfItem && checkAllItemsChildren;\n});\n(0, _chai.expect)(checkAllTypesAndLength).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "943b3ba5-bf71-4cc3-a4a7-3ee3ef8cf78c",
                "parentUUID": "8a1240da-b95d-4d0d-8994-8a65b34ed195",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/views/simonTask/NotificationComponent.spec.js",
            "uuid": "8a1240da-b95d-4d0d-8994-8a65b34ed195",
            "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/views/simonTask/NotificationComponent.spec.js",
            "passes": [
              {
                "title": "render four tr from database.phones",
                "fullTitle": "AddNewPhoneComponent  #renderCheckboxes render four tr from database.phones",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var renderCheckboxes = wrapper.instance().renderCheckboxes();\n(0, _chai.expect)(renderCheckboxes.length).to.equal(4);\n(0, _chai.expect)(renderCheckboxes[2].type).to.equal('tr');\n(0, _chai.expect)(renderCheckboxes[2].key).to.equal('2');",
                "err": {},
                "isRoot": false,
                "uuid": "3a981c9f-bb3c-495c-95e8-865e40b2f40d",
                "parentUUID": "8a1240da-b95d-4d0d-8994-8a65b34ed195",
                "skipped": false
              },
              {
                "title": "each tr has three td",
                "fullTitle": "AddNewPhoneComponent  #renderCheckboxes each tr has three td",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var renderCheckboxes = wrapper.instance().renderCheckboxes();\nvar checkAllTypesAndLength = (0, _lodash.every)(renderCheckboxes, function (item) {\n  var checkLengthOfItem = item.props.children.length == 3;\n  var checkAllItemsChildren = (0, _lodash.every)(item.props.children, function (itemChild) {\n    return itemChild.type == 'td';\n  });\n  return checkLengthOfItem && checkAllItemsChildren;\n});\n(0, _chai.expect)(checkAllTypesAndLength).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "943b3ba5-bf71-4cc3-a4a7-3ee3ef8cf78c",
                "parentUUID": "8a1240da-b95d-4d0d-8994-8a65b34ed195",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "input in #renderCheckboxes",
            "suites": [],
            "tests": [
              {
                "title": "should change checked",
                "fullTitle": "AddNewPhoneComponent  input in #renderCheckboxes should change checked",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var event = { target: { checked: false } };\n(0, _chai.expect)(wrapper.find('input').length).to.equal(8);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones[0].checked).to.equal(true);\nwrapper.find('input').first().simulate('change', event);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones[0].checked).to.equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "d1de5bdc-f1c4-44b2-b535-1c4b6e59292b",
                "parentUUID": "4c478c65-51b7-4573-bcff-f894180d2197",
                "skipped": false
              },
              {
                "title": "should change highPriority",
                "fullTitle": "AddNewPhoneComponent  input in #renderCheckboxes should change highPriority",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var event = { target: { checked: false } };\n(0, _chai.expect)(wrapper.find('input').length).to.equal(8);\ndebugger;\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones[0].highPriority).to.equal(true);\nwrapper.find('input').at(1).simulate('change', event);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones[0].highPriority).to.equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "f833d6d3-5888-4719-ad0b-6b0de6db519c",
                "parentUUID": "4c478c65-51b7-4573-bcff-f894180d2197",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/views/simonTask/NotificationComponent.spec.js",
            "uuid": "4c478c65-51b7-4573-bcff-f894180d2197",
            "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/views/simonTask/NotificationComponent.spec.js",
            "passes": [
              {
                "title": "should change checked",
                "fullTitle": "AddNewPhoneComponent  input in #renderCheckboxes should change checked",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var event = { target: { checked: false } };\n(0, _chai.expect)(wrapper.find('input').length).to.equal(8);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones[0].checked).to.equal(true);\nwrapper.find('input').first().simulate('change', event);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones[0].checked).to.equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "d1de5bdc-f1c4-44b2-b535-1c4b6e59292b",
                "parentUUID": "4c478c65-51b7-4573-bcff-f894180d2197",
                "skipped": false
              },
              {
                "title": "should change highPriority",
                "fullTitle": "AddNewPhoneComponent  input in #renderCheckboxes should change highPriority",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var event = { target: { checked: false } };\n(0, _chai.expect)(wrapper.find('input').length).to.equal(8);\ndebugger;\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones[0].highPriority).to.equal(true);\nwrapper.find('input').at(1).simulate('change', event);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones[0].highPriority).to.equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "f833d6d3-5888-4719-ad0b-6b0de6db519c",
                "parentUUID": "4c478c65-51b7-4573-bcff-f894180d2197",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [
          {
            "title": "should render \"AddNewPhoneComponent\" with markup",
            "fullTitle": "AddNewPhoneComponent  should render \"AddNewPhoneComponent\" with markup",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('h2').length).to.equal(1);\n(0, _chai.expect)(wrapper.find('h2').text()).to.equal('Notification');",
            "err": {},
            "isRoot": false,
            "uuid": "b78d71d9-aded-4830-937c-54bce103dd57",
            "parentUUID": "b7456f45-34c1-425e-b14a-ca9740dc9f39",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/views/simonTask/NotificationComponent.spec.js",
        "uuid": "b7456f45-34c1-425e-b14a-ca9740dc9f39",
        "fullFile": "/Users/Pien/Projects/FirstAppInReact/test/views/simonTask/NotificationComponent.spec.js",
        "passes": [
          {
            "title": "should render \"AddNewPhoneComponent\" with markup",
            "fullTitle": "AddNewPhoneComponent  should render \"AddNewPhoneComponent\" with markup",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('h2').length).to.equal(1);\n(0, _chai.expect)(wrapper.find('h2').text()).to.equal('Notification');",
            "err": {},
            "isRoot": false,
            "uuid": "b78d71d9-aded-4830-937c-54bce103dd57",
            "parentUUID": "b7456f45-34c1-425e-b14a-ca9740dc9f39",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 2
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "a59b2f49-28ea-4165-a737-943016d08fcd",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should render a BackToTop",
      "fullTitle": "<BackToTop /> should render a BackToTop",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTop2.default, props));\n(0, _chai.expect)(wrapper.node).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "4323554f-4d2e-4847-8e17-a0f25cd639b0",
      "parentUUID": "93e25eda-f1bc-4744-8ee6-45b5edfbd457",
      "skipped": false
    },
    {
      "title": "should render a BackToTopButton",
      "fullTitle": "<BackToTopButton /> should render a BackToTopButton",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTopButton2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "1340ca7a-9cb1-44f2-b79a-a5274a6d5b68",
      "parentUUID": "d202361b-474e-49c9-a670-dc9f0708a0b9",
      "skipped": false
    },
    {
      "title": "should have UpIcon as default children",
      "fullTitle": "<BackToTopButton /> should have UpIcon as default children",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTopButton2.default, props));\nvar UpIcon = wrapper.find('UpIcon');\n(0, _chai.expect)(UpIcon).to.exist();\n(0, _chai.expect)(UpIcon.prop('color')).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "61812b4c-ae86-45ab-9a7c-3fff2e7e10ab",
      "parentUUID": "d202361b-474e-49c9-a670-dc9f0708a0b9",
      "skipped": false
    },
    {
      "title": "should not have UpIcon as children but a span",
      "fullTitle": "<BackToTopButton /> should not have UpIcon as children but a span",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var extentedProps = (0, _extends3.default)({}, props, {\n  children: _react2.default.createElement(\n    'span',\n    { className: 'childSpan' },\n    'a child'\n  )\n});\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTopButton2.default, extentedProps));\nvar childSpan = wrapper.find('.childSpan');\n(0, _chai.expect)(childSpan).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "ae78ea43-f206-40fe-8b54-450920cb575a",
      "parentUUID": "d202361b-474e-49c9-a670-dc9f0708a0b9",
      "skipped": false
    },
    {
      "title": "should trigger onClick function prop on click",
      "fullTitle": "<BackToTopButton /> should trigger onClick function prop on click",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var event = {};\nvar onClickStub = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTopButton2.default, {\n  position: positionMock,\n  motionStyle: motionStyleMock,\n  onClick: onClickStub\n}));\nvar Button = wrapper.find('button');\nButton.simulate('click', event);\n(0, _chai.expect)(onClickStub.calledOnce).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "4eb26ca6-4d03-4505-899a-15175c436f20",
      "parentUUID": "d202361b-474e-49c9-a670-dc9f0708a0b9",
      "skipped": false
    },
    {
      "title": "should render an UpIcon",
      "fullTitle": "<UpIcon /> should render an UpIcon",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_UpIcon2.default, props));\n(0, _chai.expect)(wrapper.node).to.exist();\n(0, _chai.expect)(wrapper.find('svg')).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "880ee28d-25b0-43e3-84d0-d9a4bb0bb3c5",
      "parentUUID": "949ddbfa-13fc-4562-8c0b-d06176a00857",
      "skipped": false
    },
    {
      "title": "should set default fill color",
      "fullTitle": "<UpIcon /> should set default fill color",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_UpIcon2.default, null));\n(0, _chai.expect)(wrapper.find('svg').prop('fill')).to.equal(defaultColor);",
      "err": {},
      "isRoot": false,
      "uuid": "505b65ec-a986-42e4-a09f-9a9a7df4ac96",
      "parentUUID": "949ddbfa-13fc-4562-8c0b-d06176a00857",
      "skipped": false
    },
    {
      "title": "should set fill color from prop value",
      "fullTitle": "<UpIcon /> should set fill color from prop value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_UpIcon2.default, props));\n(0, _chai.expect)(wrapper.find('svg').prop('fill')).to.equal(colorMock);",
      "err": {},
      "isRoot": false,
      "uuid": "3ee8c1ab-556c-4a3c-b489-d436e5568538",
      "parentUUID": "949ddbfa-13fc-4562-8c0b-d06176a00857",
      "skipped": false
    },
    {
      "title": "should render a children",
      "fullTitle": "<Jumbotron /> should render a children",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.Jumbotron, props));\n(0, _chai.expect)(wrapper.containsMatchingElement(_react2.default.createElement(\n  'h1',\n  null,\n  'test'\n))).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "6f813ef7-9d03-45e5-8cec-298314edc105",
      "parentUUID": "ef35dd1f-cb75-47e8-8c49-c5ab6644a4aa",
      "skipped": false
    },
    {
      "title": "should render an Humburger",
      "fullTitle": "<Humburger /> should render an Humburger",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Humburger2.default, null));\n(0, _chai.expect)(wrapper).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "0c5fe03b-ea56-4c24-94fb-c9ef8c259280",
      "parentUUID": "72b1cb4e-5fcb-4487-9e95-fd720434796f",
      "skipped": false
    },
    {
      "title": "should contains a button with \"navbar-toggle\" class",
      "fullTitle": "<Humburger /> should contains a button with \"navbar-toggle\" class",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Humburger2.default, null));\nvar button = wrapper.find('button');\n(0, _chai.expect)(button.hasClass('navbar-toggle')).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "f12d2cec-3d8d-4ead-886d-af2d6e30749e",
      "parentUUID": "72b1cb4e-5fcb-4487-9e95-fd720434796f",
      "skipped": false
    },
    {
      "title": "should contains \"<span className=\"icon-bar\"></span>\"",
      "fullTitle": "<Humburger /> should contains \"<span className=\"icon-bar\"></span>\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Humburger2.default, null));\n(0, _chai.expect)(wrapper.contains(_react2.default.createElement('span', { className: 'icon-bar' }))).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "b34b3c66-c927-46b9-bfb3-584adb1a408b",
      "parentUUID": "72b1cb4e-5fcb-4487-9e95-fd720434796f",
      "skipped": false
    },
    {
      "title": "should render a LeftNav",
      "fullTitle": "<LeftNav /> should render a LeftNav",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "6fa36822-c55e-4592-8c61-60be23bf0900",
      "parentUUID": "aa9763ec-0629-48e8-babe-f35d774d49a4",
      "skipped": false
    },
    {
      "title": "should exist",
      "fullTitle": "child <LeftNavButton /> should exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "db054848-ab33-41ca-8ab9-933a420fdcfc",
      "parentUUID": "ab859158-e64f-4fd6-889d-7bf5f8875ae7",
      "skipped": false
    },
    {
      "title": "should be 2 LeftNavButton",
      "fullTitle": "child <LeftNavButton /> should be 2 LeftNavButton",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.length).to.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "ba89336d-902c-4bf1-b6be-54dc82c2baad",
      "parentUUID": "ab859158-e64f-4fd6-889d-7bf5f8875ae7",
      "skipped": false
    },
    {
      "title": "should be passed props label:string set to mock value",
      "fullTitle": "first LeftNavButton should be passed props label:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.first().prop('label')).to.equal(leftLinksMock[0].label);",
      "err": {},
      "isRoot": false,
      "uuid": "47e837bf-896c-4c74-b765-fe233e5ddef5",
      "parentUUID": "784328fe-d24e-45a2-8d64-062a103a3b0e",
      "skipped": false
    },
    {
      "title": "should be passed props link:string set to mock value",
      "fullTitle": "first LeftNavButton should be passed props link:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.first().prop('link')).to.equal(leftLinksMock[0].link);",
      "err": {},
      "isRoot": false,
      "uuid": "b7dfa135-be66-494a-ba2d-3690909a5e22",
      "parentUUID": "784328fe-d24e-45a2-8d64-062a103a3b0e",
      "skipped": false
    },
    {
      "title": "should be passed props viewName:string set to mock value",
      "fullTitle": "first LeftNavButton should be passed props viewName:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.first().prop('viewName')).to.equal(leftLinksMock[0].view);",
      "err": {},
      "isRoot": false,
      "uuid": "6e93b788-087c-4723-995e-dc60aae1b136",
      "parentUUID": "784328fe-d24e-45a2-8d64-062a103a3b0e",
      "skipped": false
    },
    {
      "title": "should be passed props onClick:function to be a function",
      "fullTitle": "first LeftNavButton should be passed props onClick:function to be a function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)((0, _typeof3.default)(LeftNavButton.first().prop('onClick'))).to.equal('function');",
      "err": {},
      "isRoot": false,
      "uuid": "6107fe02-52dc-4904-80cb-8fb1959dc6fe",
      "parentUUID": "784328fe-d24e-45a2-8d64-062a103a3b0e",
      "skipped": false
    },
    {
      "title": "should be passed props label:string set to mock value",
      "fullTitle": "second LeftNavButton should be passed props label:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.at(secondLeftNavButtonIndex).prop('label')).to.equal(leftLinksMock[secondLeftNavButtonIndex].label);",
      "err": {},
      "isRoot": false,
      "uuid": "0a3a1511-8821-40f5-bc6c-545397d7db9d",
      "parentUUID": "5682d63d-2546-4461-bf63-898234dbdac5",
      "skipped": false
    },
    {
      "title": "should be passed props link:string set to mock value",
      "fullTitle": "second LeftNavButton should be passed props link:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.at(secondLeftNavButtonIndex).prop('link')).to.equal(leftLinksMock[secondLeftNavButtonIndex].link);",
      "err": {},
      "isRoot": false,
      "uuid": "2f39e6bb-f7a4-49eb-bb43-1ffad8e5b350",
      "parentUUID": "5682d63d-2546-4461-bf63-898234dbdac5",
      "skipped": false
    },
    {
      "title": "should be passed props viewName:string set to mock value",
      "fullTitle": "second LeftNavButton should be passed props viewName:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.at(secondLeftNavButtonIndex).prop('viewName')).to.equal(leftLinksMock[secondLeftNavButtonIndex].view);",
      "err": {},
      "isRoot": false,
      "uuid": "e88a0a54-deb2-4449-b432-ba99b52a0134",
      "parentUUID": "5682d63d-2546-4461-bf63-898234dbdac5",
      "skipped": false
    },
    {
      "title": "should be passed props onClick:function to be a function",
      "fullTitle": "second LeftNavButton should be passed props onClick:function to be a function",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)((0, _typeof3.default)(LeftNavButton.at(secondLeftNavButtonIndex).prop('onClick'))).to.equal('function');",
      "err": {},
      "isRoot": false,
      "uuid": "70cd63fa-999a-4059-acbf-98c5fe750012",
      "parentUUID": "5682d63d-2546-4461-bf63-898234dbdac5",
      "skipped": false
    },
    {
      "title": "should render a LeftNavButton",
      "fullTitle": "<LeftNavButton /> should render a LeftNavButton",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "78b8411f-e19d-4335-a388-f01f0ece740e",
      "parentUUID": "8f897cb0-8229-406a-8f0c-e592dcf0b053",
      "skipped": false
    },
    {
      "title": "should exist",
      "fullTitle": "child <Link /> should exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, props));\nvar Link = wrapper.find('Link');\n(0, _chai.expect)(Link).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "2863aa7c-93ac-4dd9-98d6-ce9dafd443f2",
      "parentUUID": "2fd3a2b8-7f02-424e-a2e4-723a6229d0fe",
      "skipped": false
    },
    {
      "title": "should trigger a navigation on left link click",
      "fullTitle": "child <Link /> should trigger a navigation on left link click",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var event = {};\nvar onClickStub = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, (0, _extends3.default)({}, props, {\n  onClick: onClickStub\n})));\nvar Link = wrapper.find('Link');\nLink.simulate('click', event);\n(0, _chai.expect)(onClickStub.calledOnce).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "0eecf1fb-f72e-4cbd-956d-5fa1e81eb4e5",
      "parentUUID": "2fd3a2b8-7f02-424e-a2e4-723a6229d0fe",
      "skipped": false
    },
    {
      "title": "should render a NavigationBar",
      "fullTitle": "<NavigationBar /> should render a NavigationBar",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\n(0, _chai.expect)(wrapper).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "b4e4f1fc-4c40-48cc-9e4d-3f16b1a12fad",
      "parentUUID": "dd61b2f0-e4ab-4b8e-9188-c1a5cfd432f2",
      "skipped": false
    },
    {
      "title": "should display a brand name",
      "fullTitle": "<NavigationBar /> should display a brand name",
      "timedOut": false,
      "duration": 26,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_components.NavigationBar, props));\n(0, _chai.expect)(wrapper.prop('brand')).to.equal(testBrandName);",
      "err": {},
      "isRoot": false,
      "uuid": "7748c1c7-6270-4f81-9f9d-4dcbb4a5c3cb",
      "parentUUID": "dd61b2f0-e4ab-4b8e-9188-c1a5cfd432f2",
      "skipped": false
    },
    {
      "title": "should be passed props leftLinks:array of object with length 1",
      "fullTitle": "child <LeftNav /> should be passed props leftLinks:array of object with length 1",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar LeftNav = wrapper.find('LeftNav');\n(0, _chai.expect)(LeftNav.prop('leftLinks').length).to.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "b358541f-99c3-4d38-aae8-7787322c2ea6",
      "parentUUID": "cc6a739d-1a3e-48aa-b9e6-4c6f3bd224d1",
      "skipped": false
    },
    {
      "title": "should be passed props onLeftNavButtonClick:func",
      "fullTitle": "child <LeftNav /> should be passed props onLeftNavButtonClick:func",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar LeftNav = wrapper.find('LeftNav');\n(0, _chai.expect)((0, _typeof3.default)(LeftNav.prop('onLeftNavButtonClick'))).to.equal('function');",
      "err": {},
      "isRoot": false,
      "uuid": "5e4777cc-82fb-4b7d-bdc9-d4ed18d63d48",
      "parentUUID": "cc6a739d-1a3e-48aa-b9e6-4c6f3bd224d1",
      "skipped": false
    },
    {
      "title": "should be passed props rightLinks:array of object with length 2",
      "fullTitle": "child <RightNav /> should be passed props rightLinks:array of object with length 2",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar RightNav = wrapper.find('RightNav');\n(0, _chai.expect)(RightNav.prop('rightLinks').length).to.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "a35a03af-c88a-4554-91c5-78aec5acd7cf",
      "parentUUID": "0a24f6b4-5c67-4272-a7c9-e99d0418ad35",
      "skipped": false
    },
    {
      "title": "should be passed props onRightNavButtonClick:func",
      "fullTitle": "child <RightNav /> should be passed props onRightNavButtonClick:func",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar RightNav = wrapper.find('RightNav');\n(0, _chai.expect)((0, _typeof3.default)(RightNav.prop('onRightNavButtonClick'))).to.equal('function');",
      "err": {},
      "isRoot": false,
      "uuid": "6d3b4cf9-d93a-4086-af99-d15ae9ecc01b",
      "parentUUID": "0a24f6b4-5c67-4272-a7c9-e99d0418ad35",
      "skipped": false
    },
    {
      "title": "should exist",
      "fullTitle": "child <Humburger /> should exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar Humburger = wrapper.find('Humburger');\n(0, _chai.expect)(Humburger).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "7ce54775-5138-4499-8ad1-3db09a0154c3",
      "parentUUID": "066643a3-6e49-4e8d-a5e7-c7cf64d8b243",
      "skipped": false
    },
    {
      "title": "should render a RightNav",
      "fullTitle": "<RightNav /> should render a RightNav",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "8a266c4f-2ad7-4d39-a218-9c6eef06b7f3",
      "parentUUID": "9a0324a4-e42a-49fd-ada9-63d040b043ad",
      "skipped": false
    },
    {
      "title": "should exist",
      "fullTitle": "child <RightNavButton /> should exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "ffc5b70b-a3b1-44e6-92a5-cca807accd84",
      "parentUUID": "4570481f-0bfc-4e37-88a6-96dd670ba2b0",
      "skipped": false
    },
    {
      "title": "should be 2 RightNavButton",
      "fullTitle": "child <RightNavButton /> should be 2 RightNavButton",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.length).to.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "aac82ebe-22c7-413f-be46-5558e4f2c1fd",
      "parentUUID": "4570481f-0bfc-4e37-88a6-96dd670ba2b0",
      "skipped": false
    },
    {
      "title": "should be passed props label:string set to mock value",
      "fullTitle": "first RightNavButton should be passed props label:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.first().prop('label')).to.equal(rightLinksMock[0].label);",
      "err": {},
      "isRoot": false,
      "uuid": "53d59731-a1fc-4800-8b98-f64d497a3369",
      "parentUUID": "339541e6-3f79-4964-88d9-f07075705f41",
      "skipped": false
    },
    {
      "title": "should be passed props link:string set to mock value",
      "fullTitle": "first RightNavButton should be passed props link:string set to mock value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.first().prop('link')).to.equal(rightLinksMock[0].link);",
      "err": {},
      "isRoot": false,
      "uuid": "2239cf0b-3415-4f66-98cf-0f3a21ef8ee1",
      "parentUUID": "339541e6-3f79-4964-88d9-f07075705f41",
      "skipped": false
    },
    {
      "title": "should be passed props viewName:string set to mock value",
      "fullTitle": "first RightNavButton should be passed props viewName:string set to mock value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.first().prop('viewName')).to.equal(rightLinksMock[0].view);",
      "err": {},
      "isRoot": false,
      "uuid": "80c08c92-61cc-45ff-a77f-91cf8c9f2280",
      "parentUUID": "339541e6-3f79-4964-88d9-f07075705f41",
      "skipped": false
    },
    {
      "title": "should be passed props onClick:function to be a function",
      "fullTitle": "first RightNavButton should be passed props onClick:function to be a function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)((0, _typeof3.default)(RightNavButton.first().prop('onClick'))).to.equal('function');",
      "err": {},
      "isRoot": false,
      "uuid": "7e4a4237-38bf-49df-9946-5bcf164ac665",
      "parentUUID": "339541e6-3f79-4964-88d9-f07075705f41",
      "skipped": false
    },
    {
      "title": "should be passed props label:string set to mock value",
      "fullTitle": "second RightNavButton should be passed props label:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.at(secondRightNavButtonIndex).prop('label')).to.equal(rightLinksMock[secondRightNavButtonIndex].label);",
      "err": {},
      "isRoot": false,
      "uuid": "90105e13-a966-4853-be7b-c0ea179bfbe3",
      "parentUUID": "fa3498e6-645a-40a7-b7a3-5b09a0df188d",
      "skipped": false
    },
    {
      "title": "should be passed props link:string set to mock value",
      "fullTitle": "second RightNavButton should be passed props link:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.at(secondRightNavButtonIndex).prop('link')).to.equal(rightLinksMock[secondRightNavButtonIndex].link);",
      "err": {},
      "isRoot": false,
      "uuid": "8e552564-d10d-4e76-95c2-d362e2124cb0",
      "parentUUID": "fa3498e6-645a-40a7-b7a3-5b09a0df188d",
      "skipped": false
    },
    {
      "title": "should be passed props viewName:string set to mock value",
      "fullTitle": "second RightNavButton should be passed props viewName:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.at(secondRightNavButtonIndex).prop('viewName')).to.equal(rightLinksMock[secondRightNavButtonIndex].view);",
      "err": {},
      "isRoot": false,
      "uuid": "20d896f7-fe69-4d30-96c8-76a2e3ac7743",
      "parentUUID": "fa3498e6-645a-40a7-b7a3-5b09a0df188d",
      "skipped": false
    },
    {
      "title": "should be passed props onClick:function to be a function",
      "fullTitle": "second RightNavButton should be passed props onClick:function to be a function",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)((0, _typeof3.default)(RightNavButton.at(secondRightNavButtonIndex).prop('onClick'))).to.equal('function');",
      "err": {},
      "isRoot": false,
      "uuid": "bb804a6a-6d0d-4e9b-942b-f9ecb553fd5f",
      "parentUUID": "fa3498e6-645a-40a7-b7a3-5b09a0df188d",
      "skipped": false
    },
    {
      "title": "should render a LeftNavButton",
      "fullTitle": "<LeftNavButton /> should render a LeftNavButton",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "da2159a5-4911-41d3-9f8d-0901d6cac100",
      "parentUUID": "7343372c-13d1-4734-9e3a-8fc234bc5da4",
      "skipped": false
    },
    {
      "title": "should exist",
      "fullTitle": "child <Link /> should exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, props));\nvar Link = wrapper.find('Link');\n(0, _chai.expect)(Link).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "a0bd8ddd-40da-4d01-8721-af32db8d81fb",
      "parentUUID": "a879f4de-ad12-4c02-85e6-bab6eb0dc501",
      "skipped": false
    },
    {
      "title": "should trigger a navigation on left link click",
      "fullTitle": "child <Link /> should trigger a navigation on left link click",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var event = {};\nvar onClickStub = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, (0, _extends3.default)({}, props, {\n  onClick: onClickStub\n})));\nvar Link = wrapper.find('Link');\nLink.simulate('click', event);\n(0, _chai.expect)(onClickStub.calledOnce).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "2636787c-b93d-49b4-a271-f4b29f665a56",
      "parentUUID": "a879f4de-ad12-4c02-85e6-bab6eb0dc501",
      "skipped": false
    },
    {
      "title": "should render <App />",
      "fullTitle": "App should render <App />",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)(wrapper.find('NavigationBar').length).to.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "8dc86268-65c1-4348-b93d-ff679d9873be",
      "parentUUID": "e33aec10-1990-4607-b639-2873a678ea0a",
      "skipped": false
    },
    {
      "title": "should render \"About\" view",
      "fullTitle": "About VIEW  should render \"About\" view",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_About2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.containsMatchingElement(_react2.default.createElement(\n  'h1',\n  null,\n  'About'\n)));",
      "err": {},
      "isRoot": false,
      "uuid": "89e81c11-9459-400d-9b39-2ac05a379f8e",
      "parentUUID": "77208a40-036f-41af-9c18-9b58692c8efa",
      "skipped": false
    },
    {
      "title": "should render \"Components\" view",
      "fullTitle": "Components VIEW  should render \"Components\" view",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Components2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.containsMatchingElement(_react2.default.createElement(\n  'h1',\n  null,\n  'Components'\n)));",
      "err": {},
      "isRoot": false,
      "uuid": "cab8c5cd-5764-47d6-a801-50968629e181",
      "parentUUID": "60c40c4b-7a65-4789-94e1-ac70c3e0bf08",
      "skipped": false
    },
    {
      "title": "should render \"Home\" view",
      "fullTitle": "Home VIEW  should render \"Home\" view",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Home2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('Jumbotron').length).to.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "4c15e272-bbb0-420c-87fb-c4926858924b",
      "parentUUID": "a37fbe9e-f5ff-4df4-a8f0-e6a43ccbcf83",
      "skipped": false
    },
    {
      "title": "should render \"AddNewPhoneComponent\" with markup",
      "fullTitle": "AddNewPhoneComponent  should render \"AddNewPhoneComponent\" with markup",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('button').length).to.equal(1);\n(0, _chai.expect)(wrapper.find('button').text()).to.equal('Add new');",
      "err": {},
      "isRoot": false,
      "uuid": "15c8cc68-edcc-4c13-9fc3-a254bb8bc4c4",
      "parentUUID": "97a70dde-d209-461c-a884-43eac7481566",
      "skipped": false
    },
    {
      "title": "should display markup after change state.displayForm",
      "fullTitle": "AddNewPhoneComponent  should display markup after change state.displayForm",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)(wrapper.find('label').length).to.equal(0);\nwrapper.instance().seeForm();\n(0, _chai.expect)(wrapper.find('label').length).to.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "bb2cb88a-98c4-475c-944f-d6935d13fec9",
      "parentUUID": "97a70dde-d209-461c-a884-43eac7481566",
      "skipped": false
    },
    {
      "title": "should cover two class names \"col-xs-6\" ",
      "fullTitle": "AddNewPhoneComponent  should cover two class names \"col-xs-6\" ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.instance().seeForm();\n(0, _chai.expect)(wrapper.find('.col-xs-6').length).to.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "296aa42b-29ea-441c-b1bf-d15c8fc5e132",
      "parentUUID": "97a70dde-d209-461c-a884-43eac7481566",
      "skipped": false
    },
    {
      "title": "should have state object with two keys",
      "fullTitle": "AddNewPhoneComponent  should have state object with two keys",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)((0, _lodash.keys)(wrapper.state()).length).to.equal(2);\n(0, _chai.expect)((0, _lodash.keys)(wrapper.state())[0]).to.equal('displayForm');\n(0, _chai.expect)((0, _lodash.keys)(wrapper.state())[1]).to.equal('newPhone');",
      "err": {},
      "isRoot": false,
      "uuid": "f8e302ac-d7e3-41c9-9d1e-5df1b5ecc24a",
      "parentUUID": "97a70dde-d209-461c-a884-43eac7481566",
      "skipped": false
    },
    {
      "title": "should change state.displayForm",
      "fullTitle": "#seeForm should change state.displayForm",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)(wrapper.state().displayForm).to.equal(false);\nwrapper.instance().seeForm();\n(0, _chai.expect)(wrapper.state().displayForm).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "ba4da4da-293b-4f76-962c-4e2c7c900ce1",
      "parentUUID": "d25e0b4d-3aa6-4b68-81c0-fb78ae0149c9",
      "skipped": false
    },
    {
      "title": "should change state.displayForm using button",
      "fullTitle": "#seeForm should change state.displayForm using button",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)(wrapper.state().displayForm).to.equal(false);\n(0, _chai.expect)(wrapper.find('button').first().text()).to.equal('Add new');\nwrapper.find('button').first().simulate('click');\n(0, _chai.expect)(wrapper.state().displayForm).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "01f97675-3f5b-430f-aec0-f5da4bdb4ce2",
      "parentUUID": "d25e0b4d-3aa6-4b68-81c0-fb78ae0149c9",
      "skipped": false
    },
    {
      "title": "should have state.newPhone object with two keys",
      "fullTitle": "#handleChange should have state.newPhone object with two keys",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)((0, _lodash.keys)(wrapper.state().newPhone).length).to.equal(2);\n(0, _chai.expect)((0, _lodash.keys)(wrapper.state().newPhone)[0]).to.equal('name');\n(0, _chai.expect)((0, _lodash.keys)(wrapper.state().newPhone)[1]).to.equal('value');",
      "err": {},
      "isRoot": false,
      "uuid": "33af4310-9c21-43d4-9227-d2f389b4db04",
      "parentUUID": "d4796e55-de1c-4b88-b712-1a0f4f984dcd",
      "skipped": false
    },
    {
      "title": "should automatic change name of state.newPhone object",
      "fullTitle": "#handleChange should automatic change name of state.newPhone object",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.instance().seeForm();\nvar textField = wrapper.find('InputWithoutValue').first();\nvar event = { key: 'Enter', target: { value: 'mock', name: 'name' } };\ntextField.simulate('change', event);\n(0, _chai.expect)(wrapper.state().newPhone['name']).to.equal('mock');\n(0, _chai.expect)(wrapper.state().newPhone['value']).to.equal('');",
      "err": {},
      "isRoot": false,
      "uuid": "33f8095e-2c7a-4cd2-9f6f-7ec7b4421e4a",
      "parentUUID": "d4796e55-de1c-4b88-b712-1a0f4f984dcd",
      "skipped": false
    },
    {
      "title": "should automatic change value of state.newPhone object",
      "fullTitle": "#handleChange should automatic change value of state.newPhone object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.instance().seeForm();\nvar textField = wrapper.find('InputWithoutValue').last();\nvar event = { key: 'Enter', target: { value: 'mock2', name: 'value' } };\ntextField.simulate('change', event);\n(0, _chai.expect)(wrapper.state().newPhone['name']).to.equal('');\n(0, _chai.expect)(wrapper.state().newPhone['value']).to.equal('mock2');",
      "err": {},
      "isRoot": false,
      "uuid": "50bccdc6-dc3d-4b92-8012-56345624e881",
      "parentUUID": "d4796e55-de1c-4b88-b712-1a0f4f984dcd",
      "skipped": false
    },
    {
      "title": "add new object into props",
      "fullTitle": "#addNew add new object into props",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.instance().seeForm();\nvar textField = wrapper.find('InputWithoutValue').first();\nvar event = { key: 'Enter', target: { value: 'mock', name: 'name' } };\ntextField.simulate('change', event);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones.length).to.equal(4);\nwrapper.instance().addNew();\n(0, _chai.expect)(wrapper.state().newPhone['name']).to.equal('');\n(0, _chai.expect)(wrapper.state().newPhone['value']).to.equal('');\n(0, _chai.expect)(wrapper.state().displayForm).to.equal(false);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones.length).to.equal(5);",
      "err": {},
      "isRoot": false,
      "uuid": "77e61e8f-be5b-4ece-8a09-d06c0266fe6c",
      "parentUUID": "1b0e59cf-6973-4556-baca-88b57a045292",
      "skipped": false
    },
    {
      "title": "should add new object after click btn",
      "fullTitle": "#addNew should add new object after click btn",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.instance().seeForm();\nvar textField = wrapper.find('InputWithoutValue').first();\nvar event = { key: 'Enter', target: { value: 'mock', name: 'name' } };\ntextField.simulate('change', event);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones.length).to.equal(4);\n(0, _chai.expect)(wrapper.find('button').last().text()).to.equal('Add');\nwrapper.find('button').last().simulate('click');\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones.length).to.equal(5);",
      "err": {},
      "isRoot": false,
      "uuid": "b68fff3c-d28b-45e7-bfb7-1b6ade386e7b",
      "parentUUID": "1b0e59cf-6973-4556-baca-88b57a045292",
      "skipped": false
    },
    {
      "title": "should render \"ColorComponent\" with markup",
      "fullTitle": "ColorComponent  should render \"ColorComponent\" with markup",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_ColorComponent2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('h2').length).to.equal(1);\n(0, _chai.expect)(wrapper.find('p').length).to.equal(1);\n(0, _chai.expect)((0, _typeof3.default)(wrapper.find('div').children().nodes[2].type)).to.equal('function');",
      "err": {},
      "isRoot": false,
      "uuid": "840affc7-c092-4a13-b776-b11044023193",
      "parentUUID": "f9426263-3b21-4583-85fe-88681d8aef87",
      "skipped": false
    },
    {
      "title": "h2 should contain text \"Color Schema\"",
      "fullTitle": "ColorComponent  h2 should contain text \"Color Schema\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_ColorComponent2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('p').text()).to.equal('Dark schema');",
      "err": {},
      "isRoot": false,
      "uuid": "7e8b4689-1b23-49f8-b063-e665cfc9145d",
      "parentUUID": "f9426263-3b21-4583-85fe-88681d8aef87",
      "skipped": false
    },
    {
      "title": "p should contain text \"Dark schema\"",
      "fullTitle": "ColorComponent  p should contain text \"Dark schema\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_ColorComponent2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('p').text()).to.equal('Dark schema');",
      "err": {},
      "isRoot": false,
      "uuid": "4a5f7786-5d12-4ebc-bf5e-78c740aee20e",
      "parentUUID": "f9426263-3b21-4583-85fe-88681d8aef87",
      "skipped": false
    },
    {
      "title": "should render \"AddNewPhoneComponent\" with markup",
      "fullTitle": "AddNewPhoneComponent  should render \"AddNewPhoneComponent\" with markup",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('h2').length).to.equal(1);\n(0, _chai.expect)(wrapper.find('h2').text()).to.equal('Notification');",
      "err": {},
      "isRoot": false,
      "uuid": "b78d71d9-aded-4830-937c-54bce103dd57",
      "parentUUID": "b7456f45-34c1-425e-b14a-ca9740dc9f39",
      "skipped": false
    },
    {
      "title": "should change state of checkbox with key \"checked\"",
      "fullTitle": "#toggleNotificationSetting should change state of checkbox with key \"checked\"",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapperInstance = wrapper.instance();\nvar wrapperProps = wrapperInstance.props;\nvar secondPhone = wrapperProps.dataBase.phones[2];\n(0, _chai.expect)(secondPhone.checked).to.equal(false);\nwrapperInstance.toggleNotificationSetting(secondPhone, 'checked');\n(0, _chai.expect)(secondPhone.checked).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "c7de64dc-8ffe-4c79-bae9-4e6cdd3e9b56",
      "parentUUID": "05e100c6-9f21-4593-b4ed-3fe3940b4932",
      "skipped": false
    },
    {
      "title": "should change state of checkbox with key \"highPriority\"",
      "fullTitle": "#toggleNotificationSetting should change state of checkbox with key \"highPriority\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapperInstance = wrapper.instance();\nvar wrapperProps = wrapperInstance.props;\nvar secondPhone = wrapperProps.dataBase.phones[0];\n(0, _chai.expect)(secondPhone.highPriority).to.equal(true);\nwrapperInstance.toggleNotificationSetting(secondPhone, 'highPriority');\n(0, _chai.expect)(secondPhone.highPriority).to.equal(false);",
      "err": {},
      "isRoot": false,
      "uuid": "f34d0fd6-fc91-4519-8c24-fc31f8819462",
      "parentUUID": "05e100c6-9f21-4593-b4ed-3fe3940b4932",
      "skipped": false
    },
    {
      "title": "render four tr from database.phones",
      "fullTitle": "#renderCheckboxes render four tr from database.phones",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var renderCheckboxes = wrapper.instance().renderCheckboxes();\n(0, _chai.expect)(renderCheckboxes.length).to.equal(4);\n(0, _chai.expect)(renderCheckboxes[2].type).to.equal('tr');\n(0, _chai.expect)(renderCheckboxes[2].key).to.equal('2');",
      "err": {},
      "isRoot": false,
      "uuid": "3a981c9f-bb3c-495c-95e8-865e40b2f40d",
      "parentUUID": "8a1240da-b95d-4d0d-8994-8a65b34ed195",
      "skipped": false
    },
    {
      "title": "each tr has three td",
      "fullTitle": "#renderCheckboxes each tr has three td",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var renderCheckboxes = wrapper.instance().renderCheckboxes();\nvar checkAllTypesAndLength = (0, _lodash.every)(renderCheckboxes, function (item) {\n  var checkLengthOfItem = item.props.children.length == 3;\n  var checkAllItemsChildren = (0, _lodash.every)(item.props.children, function (itemChild) {\n    return itemChild.type == 'td';\n  });\n  return checkLengthOfItem && checkAllItemsChildren;\n});\n(0, _chai.expect)(checkAllTypesAndLength).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "943b3ba5-bf71-4cc3-a4a7-3ee3ef8cf78c",
      "parentUUID": "8a1240da-b95d-4d0d-8994-8a65b34ed195",
      "skipped": false
    },
    {
      "title": "should change checked",
      "fullTitle": "input in #renderCheckboxes should change checked",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var event = { target: { checked: false } };\n(0, _chai.expect)(wrapper.find('input').length).to.equal(8);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones[0].checked).to.equal(true);\nwrapper.find('input').first().simulate('change', event);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones[0].checked).to.equal(false);",
      "err": {},
      "isRoot": false,
      "uuid": "d1de5bdc-f1c4-44b2-b535-1c4b6e59292b",
      "parentUUID": "4c478c65-51b7-4573-bcff-f894180d2197",
      "skipped": false
    },
    {
      "title": "should change highPriority",
      "fullTitle": "input in #renderCheckboxes should change highPriority",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var event = { target: { checked: false } };\n(0, _chai.expect)(wrapper.find('input').length).to.equal(8);\ndebugger;\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones[0].highPriority).to.equal(true);\nwrapper.find('input').at(1).simulate('change', event);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones[0].highPriority).to.equal(false);",
      "err": {},
      "isRoot": false,
      "uuid": "f833d6d3-5888-4719-ad0b-6b0de6db519c",
      "parentUUID": "4c478c65-51b7-4573-bcff-f894180d2197",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should render a BackToTop",
      "fullTitle": "<BackToTop /> should render a BackToTop",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTop2.default, props));\n(0, _chai.expect)(wrapper.node).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "4323554f-4d2e-4847-8e17-a0f25cd639b0",
      "parentUUID": "93e25eda-f1bc-4744-8ee6-45b5edfbd457",
      "skipped": false
    },
    {
      "title": "should render a BackToTopButton",
      "fullTitle": "<BackToTopButton /> should render a BackToTopButton",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTopButton2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "1340ca7a-9cb1-44f2-b79a-a5274a6d5b68",
      "parentUUID": "d202361b-474e-49c9-a670-dc9f0708a0b9",
      "skipped": false
    },
    {
      "title": "should have UpIcon as default children",
      "fullTitle": "<BackToTopButton /> should have UpIcon as default children",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTopButton2.default, props));\nvar UpIcon = wrapper.find('UpIcon');\n(0, _chai.expect)(UpIcon).to.exist();\n(0, _chai.expect)(UpIcon.prop('color')).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "61812b4c-ae86-45ab-9a7c-3fff2e7e10ab",
      "parentUUID": "d202361b-474e-49c9-a670-dc9f0708a0b9",
      "skipped": false
    },
    {
      "title": "should not have UpIcon as children but a span",
      "fullTitle": "<BackToTopButton /> should not have UpIcon as children but a span",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var extentedProps = (0, _extends3.default)({}, props, {\n  children: _react2.default.createElement(\n    'span',\n    { className: 'childSpan' },\n    'a child'\n  )\n});\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTopButton2.default, extentedProps));\nvar childSpan = wrapper.find('.childSpan');\n(0, _chai.expect)(childSpan).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "ae78ea43-f206-40fe-8b54-450920cb575a",
      "parentUUID": "d202361b-474e-49c9-a670-dc9f0708a0b9",
      "skipped": false
    },
    {
      "title": "should trigger onClick function prop on click",
      "fullTitle": "<BackToTopButton /> should trigger onClick function prop on click",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var event = {};\nvar onClickStub = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_BackToTopButton2.default, {\n  position: positionMock,\n  motionStyle: motionStyleMock,\n  onClick: onClickStub\n}));\nvar Button = wrapper.find('button');\nButton.simulate('click', event);\n(0, _chai.expect)(onClickStub.calledOnce).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "4eb26ca6-4d03-4505-899a-15175c436f20",
      "parentUUID": "d202361b-474e-49c9-a670-dc9f0708a0b9",
      "skipped": false
    },
    {
      "title": "should render an UpIcon",
      "fullTitle": "<UpIcon /> should render an UpIcon",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_UpIcon2.default, props));\n(0, _chai.expect)(wrapper.node).to.exist();\n(0, _chai.expect)(wrapper.find('svg')).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "880ee28d-25b0-43e3-84d0-d9a4bb0bb3c5",
      "parentUUID": "949ddbfa-13fc-4562-8c0b-d06176a00857",
      "skipped": false
    },
    {
      "title": "should set default fill color",
      "fullTitle": "<UpIcon /> should set default fill color",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_UpIcon2.default, null));\n(0, _chai.expect)(wrapper.find('svg').prop('fill')).to.equal(defaultColor);",
      "err": {},
      "isRoot": false,
      "uuid": "505b65ec-a986-42e4-a09f-9a9a7df4ac96",
      "parentUUID": "949ddbfa-13fc-4562-8c0b-d06176a00857",
      "skipped": false
    },
    {
      "title": "should set fill color from prop value",
      "fullTitle": "<UpIcon /> should set fill color from prop value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_UpIcon2.default, props));\n(0, _chai.expect)(wrapper.find('svg').prop('fill')).to.equal(colorMock);",
      "err": {},
      "isRoot": false,
      "uuid": "3ee8c1ab-556c-4a3c-b489-d436e5568538",
      "parentUUID": "949ddbfa-13fc-4562-8c0b-d06176a00857",
      "skipped": false
    },
    {
      "title": "should render a children",
      "fullTitle": "<Jumbotron /> should render a children",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.Jumbotron, props));\n(0, _chai.expect)(wrapper.containsMatchingElement(_react2.default.createElement(\n  'h1',\n  null,\n  'test'\n))).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "6f813ef7-9d03-45e5-8cec-298314edc105",
      "parentUUID": "ef35dd1f-cb75-47e8-8c49-c5ab6644a4aa",
      "skipped": false
    },
    {
      "title": "should render an Humburger",
      "fullTitle": "<Humburger /> should render an Humburger",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Humburger2.default, null));\n(0, _chai.expect)(wrapper).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "0c5fe03b-ea56-4c24-94fb-c9ef8c259280",
      "parentUUID": "72b1cb4e-5fcb-4487-9e95-fd720434796f",
      "skipped": false
    },
    {
      "title": "should contains a button with \"navbar-toggle\" class",
      "fullTitle": "<Humburger /> should contains a button with \"navbar-toggle\" class",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Humburger2.default, null));\nvar button = wrapper.find('button');\n(0, _chai.expect)(button.hasClass('navbar-toggle')).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "f12d2cec-3d8d-4ead-886d-af2d6e30749e",
      "parentUUID": "72b1cb4e-5fcb-4487-9e95-fd720434796f",
      "skipped": false
    },
    {
      "title": "should contains \"<span className=\"icon-bar\"></span>\"",
      "fullTitle": "<Humburger /> should contains \"<span className=\"icon-bar\"></span>\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Humburger2.default, null));\n(0, _chai.expect)(wrapper.contains(_react2.default.createElement('span', { className: 'icon-bar' }))).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "b34b3c66-c927-46b9-bfb3-584adb1a408b",
      "parentUUID": "72b1cb4e-5fcb-4487-9e95-fd720434796f",
      "skipped": false
    },
    {
      "title": "should render a LeftNav",
      "fullTitle": "<LeftNav /> should render a LeftNav",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "6fa36822-c55e-4592-8c61-60be23bf0900",
      "parentUUID": "aa9763ec-0629-48e8-babe-f35d774d49a4",
      "skipped": false
    },
    {
      "title": "should exist",
      "fullTitle": "child <LeftNavButton /> should exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "db054848-ab33-41ca-8ab9-933a420fdcfc",
      "parentUUID": "ab859158-e64f-4fd6-889d-7bf5f8875ae7",
      "skipped": false
    },
    {
      "title": "should be 2 LeftNavButton",
      "fullTitle": "child <LeftNavButton /> should be 2 LeftNavButton",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.length).to.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "ba89336d-902c-4bf1-b6be-54dc82c2baad",
      "parentUUID": "ab859158-e64f-4fd6-889d-7bf5f8875ae7",
      "skipped": false
    },
    {
      "title": "should be passed props label:string set to mock value",
      "fullTitle": "first LeftNavButton should be passed props label:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.first().prop('label')).to.equal(leftLinksMock[0].label);",
      "err": {},
      "isRoot": false,
      "uuid": "47e837bf-896c-4c74-b765-fe233e5ddef5",
      "parentUUID": "784328fe-d24e-45a2-8d64-062a103a3b0e",
      "skipped": false
    },
    {
      "title": "should be passed props link:string set to mock value",
      "fullTitle": "first LeftNavButton should be passed props link:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.first().prop('link')).to.equal(leftLinksMock[0].link);",
      "err": {},
      "isRoot": false,
      "uuid": "b7dfa135-be66-494a-ba2d-3690909a5e22",
      "parentUUID": "784328fe-d24e-45a2-8d64-062a103a3b0e",
      "skipped": false
    },
    {
      "title": "should be passed props viewName:string set to mock value",
      "fullTitle": "first LeftNavButton should be passed props viewName:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.first().prop('viewName')).to.equal(leftLinksMock[0].view);",
      "err": {},
      "isRoot": false,
      "uuid": "6e93b788-087c-4723-995e-dc60aae1b136",
      "parentUUID": "784328fe-d24e-45a2-8d64-062a103a3b0e",
      "skipped": false
    },
    {
      "title": "should be passed props onClick:function to be a function",
      "fullTitle": "first LeftNavButton should be passed props onClick:function to be a function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)((0, _typeof3.default)(LeftNavButton.first().prop('onClick'))).to.equal('function');",
      "err": {},
      "isRoot": false,
      "uuid": "6107fe02-52dc-4904-80cb-8fb1959dc6fe",
      "parentUUID": "784328fe-d24e-45a2-8d64-062a103a3b0e",
      "skipped": false
    },
    {
      "title": "should be passed props label:string set to mock value",
      "fullTitle": "second LeftNavButton should be passed props label:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.at(secondLeftNavButtonIndex).prop('label')).to.equal(leftLinksMock[secondLeftNavButtonIndex].label);",
      "err": {},
      "isRoot": false,
      "uuid": "0a3a1511-8821-40f5-bc6c-545397d7db9d",
      "parentUUID": "5682d63d-2546-4461-bf63-898234dbdac5",
      "skipped": false
    },
    {
      "title": "should be passed props link:string set to mock value",
      "fullTitle": "second LeftNavButton should be passed props link:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.at(secondLeftNavButtonIndex).prop('link')).to.equal(leftLinksMock[secondLeftNavButtonIndex].link);",
      "err": {},
      "isRoot": false,
      "uuid": "2f39e6bb-f7a4-49eb-bb43-1ffad8e5b350",
      "parentUUID": "5682d63d-2546-4461-bf63-898234dbdac5",
      "skipped": false
    },
    {
      "title": "should be passed props viewName:string set to mock value",
      "fullTitle": "second LeftNavButton should be passed props viewName:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)(LeftNavButton.at(secondLeftNavButtonIndex).prop('viewName')).to.equal(leftLinksMock[secondLeftNavButtonIndex].view);",
      "err": {},
      "isRoot": false,
      "uuid": "e88a0a54-deb2-4449-b432-ba99b52a0134",
      "parentUUID": "5682d63d-2546-4461-bf63-898234dbdac5",
      "skipped": false
    },
    {
      "title": "should be passed props onClick:function to be a function",
      "fullTitle": "second LeftNavButton should be passed props onClick:function to be a function",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNav2.default, props));\nvar LeftNavButton = wrapper.find('LeftNavButton');\n(0, _chai.expect)((0, _typeof3.default)(LeftNavButton.at(secondLeftNavButtonIndex).prop('onClick'))).to.equal('function');",
      "err": {},
      "isRoot": false,
      "uuid": "70cd63fa-999a-4059-acbf-98c5fe750012",
      "parentUUID": "5682d63d-2546-4461-bf63-898234dbdac5",
      "skipped": false
    },
    {
      "title": "should render a LeftNavButton",
      "fullTitle": "<LeftNavButton /> should render a LeftNavButton",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "78b8411f-e19d-4335-a388-f01f0ece740e",
      "parentUUID": "8f897cb0-8229-406a-8f0c-e592dcf0b053",
      "skipped": false
    },
    {
      "title": "should exist",
      "fullTitle": "child <Link /> should exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, props));\nvar Link = wrapper.find('Link');\n(0, _chai.expect)(Link).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "2863aa7c-93ac-4dd9-98d6-ce9dafd443f2",
      "parentUUID": "2fd3a2b8-7f02-424e-a2e4-723a6229d0fe",
      "skipped": false
    },
    {
      "title": "should trigger a navigation on left link click",
      "fullTitle": "child <Link /> should trigger a navigation on left link click",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var event = {};\nvar onClickStub = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, (0, _extends3.default)({}, props, {\n  onClick: onClickStub\n})));\nvar Link = wrapper.find('Link');\nLink.simulate('click', event);\n(0, _chai.expect)(onClickStub.calledOnce).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "0eecf1fb-f72e-4cbd-956d-5fa1e81eb4e5",
      "parentUUID": "2fd3a2b8-7f02-424e-a2e4-723a6229d0fe",
      "skipped": false
    },
    {
      "title": "should render a NavigationBar",
      "fullTitle": "<NavigationBar /> should render a NavigationBar",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\n(0, _chai.expect)(wrapper).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "b4e4f1fc-4c40-48cc-9e4d-3f16b1a12fad",
      "parentUUID": "dd61b2f0-e4ab-4b8e-9188-c1a5cfd432f2",
      "skipped": false
    },
    {
      "title": "should display a brand name",
      "fullTitle": "<NavigationBar /> should display a brand name",
      "timedOut": false,
      "duration": 26,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_components.NavigationBar, props));\n(0, _chai.expect)(wrapper.prop('brand')).to.equal(testBrandName);",
      "err": {},
      "isRoot": false,
      "uuid": "7748c1c7-6270-4f81-9f9d-4dcbb4a5c3cb",
      "parentUUID": "dd61b2f0-e4ab-4b8e-9188-c1a5cfd432f2",
      "skipped": false
    },
    {
      "title": "should be passed props leftLinks:array of object with length 1",
      "fullTitle": "child <LeftNav /> should be passed props leftLinks:array of object with length 1",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar LeftNav = wrapper.find('LeftNav');\n(0, _chai.expect)(LeftNav.prop('leftLinks').length).to.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "b358541f-99c3-4d38-aae8-7787322c2ea6",
      "parentUUID": "cc6a739d-1a3e-48aa-b9e6-4c6f3bd224d1",
      "skipped": false
    },
    {
      "title": "should be passed props onLeftNavButtonClick:func",
      "fullTitle": "child <LeftNav /> should be passed props onLeftNavButtonClick:func",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar LeftNav = wrapper.find('LeftNav');\n(0, _chai.expect)((0, _typeof3.default)(LeftNav.prop('onLeftNavButtonClick'))).to.equal('function');",
      "err": {},
      "isRoot": false,
      "uuid": "5e4777cc-82fb-4b7d-bdc9-d4ed18d63d48",
      "parentUUID": "cc6a739d-1a3e-48aa-b9e6-4c6f3bd224d1",
      "skipped": false
    },
    {
      "title": "should be passed props rightLinks:array of object with length 2",
      "fullTitle": "child <RightNav /> should be passed props rightLinks:array of object with length 2",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar RightNav = wrapper.find('RightNav');\n(0, _chai.expect)(RightNav.prop('rightLinks').length).to.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "a35a03af-c88a-4554-91c5-78aec5acd7cf",
      "parentUUID": "0a24f6b4-5c67-4272-a7c9-e99d0418ad35",
      "skipped": false
    },
    {
      "title": "should be passed props onRightNavButtonClick:func",
      "fullTitle": "child <RightNav /> should be passed props onRightNavButtonClick:func",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar RightNav = wrapper.find('RightNav');\n(0, _chai.expect)((0, _typeof3.default)(RightNav.prop('onRightNavButtonClick'))).to.equal('function');",
      "err": {},
      "isRoot": false,
      "uuid": "6d3b4cf9-d93a-4086-af99-d15ae9ecc01b",
      "parentUUID": "0a24f6b4-5c67-4272-a7c9-e99d0418ad35",
      "skipped": false
    },
    {
      "title": "should exist",
      "fullTitle": "child <Humburger /> should exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_components.NavigationBar, props));\nvar Humburger = wrapper.find('Humburger');\n(0, _chai.expect)(Humburger).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "7ce54775-5138-4499-8ad1-3db09a0154c3",
      "parentUUID": "066643a3-6e49-4e8d-a5e7-c7cf64d8b243",
      "skipped": false
    },
    {
      "title": "should render a RightNav",
      "fullTitle": "<RightNav /> should render a RightNav",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "8a266c4f-2ad7-4d39-a218-9c6eef06b7f3",
      "parentUUID": "9a0324a4-e42a-49fd-ada9-63d040b043ad",
      "skipped": false
    },
    {
      "title": "should exist",
      "fullTitle": "child <RightNavButton /> should exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "ffc5b70b-a3b1-44e6-92a5-cca807accd84",
      "parentUUID": "4570481f-0bfc-4e37-88a6-96dd670ba2b0",
      "skipped": false
    },
    {
      "title": "should be 2 RightNavButton",
      "fullTitle": "child <RightNavButton /> should be 2 RightNavButton",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.length).to.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "aac82ebe-22c7-413f-be46-5558e4f2c1fd",
      "parentUUID": "4570481f-0bfc-4e37-88a6-96dd670ba2b0",
      "skipped": false
    },
    {
      "title": "should be passed props label:string set to mock value",
      "fullTitle": "first RightNavButton should be passed props label:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.first().prop('label')).to.equal(rightLinksMock[0].label);",
      "err": {},
      "isRoot": false,
      "uuid": "53d59731-a1fc-4800-8b98-f64d497a3369",
      "parentUUID": "339541e6-3f79-4964-88d9-f07075705f41",
      "skipped": false
    },
    {
      "title": "should be passed props link:string set to mock value",
      "fullTitle": "first RightNavButton should be passed props link:string set to mock value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.first().prop('link')).to.equal(rightLinksMock[0].link);",
      "err": {},
      "isRoot": false,
      "uuid": "2239cf0b-3415-4f66-98cf-0f3a21ef8ee1",
      "parentUUID": "339541e6-3f79-4964-88d9-f07075705f41",
      "skipped": false
    },
    {
      "title": "should be passed props viewName:string set to mock value",
      "fullTitle": "first RightNavButton should be passed props viewName:string set to mock value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.first().prop('viewName')).to.equal(rightLinksMock[0].view);",
      "err": {},
      "isRoot": false,
      "uuid": "80c08c92-61cc-45ff-a77f-91cf8c9f2280",
      "parentUUID": "339541e6-3f79-4964-88d9-f07075705f41",
      "skipped": false
    },
    {
      "title": "should be passed props onClick:function to be a function",
      "fullTitle": "first RightNavButton should be passed props onClick:function to be a function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)((0, _typeof3.default)(RightNavButton.first().prop('onClick'))).to.equal('function');",
      "err": {},
      "isRoot": false,
      "uuid": "7e4a4237-38bf-49df-9946-5bcf164ac665",
      "parentUUID": "339541e6-3f79-4964-88d9-f07075705f41",
      "skipped": false
    },
    {
      "title": "should be passed props label:string set to mock value",
      "fullTitle": "second RightNavButton should be passed props label:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.at(secondRightNavButtonIndex).prop('label')).to.equal(rightLinksMock[secondRightNavButtonIndex].label);",
      "err": {},
      "isRoot": false,
      "uuid": "90105e13-a966-4853-be7b-c0ea179bfbe3",
      "parentUUID": "fa3498e6-645a-40a7-b7a3-5b09a0df188d",
      "skipped": false
    },
    {
      "title": "should be passed props link:string set to mock value",
      "fullTitle": "second RightNavButton should be passed props link:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.at(secondRightNavButtonIndex).prop('link')).to.equal(rightLinksMock[secondRightNavButtonIndex].link);",
      "err": {},
      "isRoot": false,
      "uuid": "8e552564-d10d-4e76-95c2-d362e2124cb0",
      "parentUUID": "fa3498e6-645a-40a7-b7a3-5b09a0df188d",
      "skipped": false
    },
    {
      "title": "should be passed props viewName:string set to mock value",
      "fullTitle": "second RightNavButton should be passed props viewName:string set to mock value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)(RightNavButton.at(secondRightNavButtonIndex).prop('viewName')).to.equal(rightLinksMock[secondRightNavButtonIndex].view);",
      "err": {},
      "isRoot": false,
      "uuid": "20d896f7-fe69-4d30-96c8-76a2e3ac7743",
      "parentUUID": "fa3498e6-645a-40a7-b7a3-5b09a0df188d",
      "skipped": false
    },
    {
      "title": "should be passed props onClick:function to be a function",
      "fullTitle": "second RightNavButton should be passed props onClick:function to be a function",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_RightNav2.default, props));\nvar RightNavButton = wrapper.find('RightNavButton');\n(0, _chai.expect)((0, _typeof3.default)(RightNavButton.at(secondRightNavButtonIndex).prop('onClick'))).to.equal('function');",
      "err": {},
      "isRoot": false,
      "uuid": "bb804a6a-6d0d-4e9b-942b-f9ecb553fd5f",
      "parentUUID": "fa3498e6-645a-40a7-b7a3-5b09a0df188d",
      "skipped": false
    },
    {
      "title": "should render a LeftNavButton",
      "fullTitle": "<LeftNavButton /> should render a LeftNavButton",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, props));\n(0, _chai.expect)(wrapper).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "da2159a5-4911-41d3-9f8d-0901d6cac100",
      "parentUUID": "7343372c-13d1-4734-9e3a-8fc234bc5da4",
      "skipped": false
    },
    {
      "title": "should exist",
      "fullTitle": "child <Link /> should exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, props));\nvar Link = wrapper.find('Link');\n(0, _chai.expect)(Link).to.exist();",
      "err": {},
      "isRoot": false,
      "uuid": "a0bd8ddd-40da-4d01-8721-af32db8d81fb",
      "parentUUID": "a879f4de-ad12-4c02-85e6-bab6eb0dc501",
      "skipped": false
    },
    {
      "title": "should trigger a navigation on left link click",
      "fullTitle": "child <Link /> should trigger a navigation on left link click",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var event = {};\nvar onClickStub = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_LeftNavButton2.default, (0, _extends3.default)({}, props, {\n  onClick: onClickStub\n})));\nvar Link = wrapper.find('Link');\nLink.simulate('click', event);\n(0, _chai.expect)(onClickStub.calledOnce).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "2636787c-b93d-49b4-a271-f4b29f665a56",
      "parentUUID": "a879f4de-ad12-4c02-85e6-bab6eb0dc501",
      "skipped": false
    },
    {
      "title": "should render <App />",
      "fullTitle": "App should render <App />",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)(wrapper.find('NavigationBar').length).to.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "8dc86268-65c1-4348-b93d-ff679d9873be",
      "parentUUID": "e33aec10-1990-4607-b639-2873a678ea0a",
      "skipped": false
    },
    {
      "title": "should render \"About\" view",
      "fullTitle": "About VIEW  should render \"About\" view",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_About2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.containsMatchingElement(_react2.default.createElement(\n  'h1',\n  null,\n  'About'\n)));",
      "err": {},
      "isRoot": false,
      "uuid": "89e81c11-9459-400d-9b39-2ac05a379f8e",
      "parentUUID": "77208a40-036f-41af-9c18-9b58692c8efa",
      "skipped": false
    },
    {
      "title": "should render \"Components\" view",
      "fullTitle": "Components VIEW  should render \"Components\" view",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Components2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.containsMatchingElement(_react2.default.createElement(\n  'h1',\n  null,\n  'Components'\n)));",
      "err": {},
      "isRoot": false,
      "uuid": "cab8c5cd-5764-47d6-a801-50968629e181",
      "parentUUID": "60c40c4b-7a65-4789-94e1-ac70c3e0bf08",
      "skipped": false
    },
    {
      "title": "should render \"Home\" view",
      "fullTitle": "Home VIEW  should render \"Home\" view",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Home2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('Jumbotron').length).to.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "4c15e272-bbb0-420c-87fb-c4926858924b",
      "parentUUID": "a37fbe9e-f5ff-4df4-a8f0-e6a43ccbcf83",
      "skipped": false
    },
    {
      "title": "should render \"AddNewPhoneComponent\" with markup",
      "fullTitle": "AddNewPhoneComponent  should render \"AddNewPhoneComponent\" with markup",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('button').length).to.equal(1);\n(0, _chai.expect)(wrapper.find('button').text()).to.equal('Add new');",
      "err": {},
      "isRoot": false,
      "uuid": "15c8cc68-edcc-4c13-9fc3-a254bb8bc4c4",
      "parentUUID": "97a70dde-d209-461c-a884-43eac7481566",
      "skipped": false
    },
    {
      "title": "should display markup after change state.displayForm",
      "fullTitle": "AddNewPhoneComponent  should display markup after change state.displayForm",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)(wrapper.find('label').length).to.equal(0);\nwrapper.instance().seeForm();\n(0, _chai.expect)(wrapper.find('label').length).to.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "bb2cb88a-98c4-475c-944f-d6935d13fec9",
      "parentUUID": "97a70dde-d209-461c-a884-43eac7481566",
      "skipped": false
    },
    {
      "title": "should cover two class names \"col-xs-6\" ",
      "fullTitle": "AddNewPhoneComponent  should cover two class names \"col-xs-6\" ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.instance().seeForm();\n(0, _chai.expect)(wrapper.find('.col-xs-6').length).to.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "296aa42b-29ea-441c-b1bf-d15c8fc5e132",
      "parentUUID": "97a70dde-d209-461c-a884-43eac7481566",
      "skipped": false
    },
    {
      "title": "should have state object with two keys",
      "fullTitle": "AddNewPhoneComponent  should have state object with two keys",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)((0, _lodash.keys)(wrapper.state()).length).to.equal(2);\n(0, _chai.expect)((0, _lodash.keys)(wrapper.state())[0]).to.equal('displayForm');\n(0, _chai.expect)((0, _lodash.keys)(wrapper.state())[1]).to.equal('newPhone');",
      "err": {},
      "isRoot": false,
      "uuid": "f8e302ac-d7e3-41c9-9d1e-5df1b5ecc24a",
      "parentUUID": "97a70dde-d209-461c-a884-43eac7481566",
      "skipped": false
    },
    {
      "title": "should change state.displayForm",
      "fullTitle": "#seeForm should change state.displayForm",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)(wrapper.state().displayForm).to.equal(false);\nwrapper.instance().seeForm();\n(0, _chai.expect)(wrapper.state().displayForm).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "ba4da4da-293b-4f76-962c-4e2c7c900ce1",
      "parentUUID": "d25e0b4d-3aa6-4b68-81c0-fb78ae0149c9",
      "skipped": false
    },
    {
      "title": "should change state.displayForm using button",
      "fullTitle": "#seeForm should change state.displayForm using button",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)(wrapper.state().displayForm).to.equal(false);\n(0, _chai.expect)(wrapper.find('button').first().text()).to.equal('Add new');\nwrapper.find('button').first().simulate('click');\n(0, _chai.expect)(wrapper.state().displayForm).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "01f97675-3f5b-430f-aec0-f5da4bdb4ce2",
      "parentUUID": "d25e0b4d-3aa6-4b68-81c0-fb78ae0149c9",
      "skipped": false
    },
    {
      "title": "should have state.newPhone object with two keys",
      "fullTitle": "#handleChange should have state.newPhone object with two keys",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)((0, _lodash.keys)(wrapper.state().newPhone).length).to.equal(2);\n(0, _chai.expect)((0, _lodash.keys)(wrapper.state().newPhone)[0]).to.equal('name');\n(0, _chai.expect)((0, _lodash.keys)(wrapper.state().newPhone)[1]).to.equal('value');",
      "err": {},
      "isRoot": false,
      "uuid": "33af4310-9c21-43d4-9227-d2f389b4db04",
      "parentUUID": "d4796e55-de1c-4b88-b712-1a0f4f984dcd",
      "skipped": false
    },
    {
      "title": "should automatic change name of state.newPhone object",
      "fullTitle": "#handleChange should automatic change name of state.newPhone object",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.instance().seeForm();\nvar textField = wrapper.find('InputWithoutValue').first();\nvar event = { key: 'Enter', target: { value: 'mock', name: 'name' } };\ntextField.simulate('change', event);\n(0, _chai.expect)(wrapper.state().newPhone['name']).to.equal('mock');\n(0, _chai.expect)(wrapper.state().newPhone['value']).to.equal('');",
      "err": {},
      "isRoot": false,
      "uuid": "33f8095e-2c7a-4cd2-9f6f-7ec7b4421e4a",
      "parentUUID": "d4796e55-de1c-4b88-b712-1a0f4f984dcd",
      "skipped": false
    },
    {
      "title": "should automatic change value of state.newPhone object",
      "fullTitle": "#handleChange should automatic change value of state.newPhone object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.instance().seeForm();\nvar textField = wrapper.find('InputWithoutValue').last();\nvar event = { key: 'Enter', target: { value: 'mock2', name: 'value' } };\ntextField.simulate('change', event);\n(0, _chai.expect)(wrapper.state().newPhone['name']).to.equal('');\n(0, _chai.expect)(wrapper.state().newPhone['value']).to.equal('mock2');",
      "err": {},
      "isRoot": false,
      "uuid": "50bccdc6-dc3d-4b92-8012-56345624e881",
      "parentUUID": "d4796e55-de1c-4b88-b712-1a0f4f984dcd",
      "skipped": false
    },
    {
      "title": "add new object into props",
      "fullTitle": "#addNew add new object into props",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.instance().seeForm();\nvar textField = wrapper.find('InputWithoutValue').first();\nvar event = { key: 'Enter', target: { value: 'mock', name: 'name' } };\ntextField.simulate('change', event);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones.length).to.equal(4);\nwrapper.instance().addNew();\n(0, _chai.expect)(wrapper.state().newPhone['name']).to.equal('');\n(0, _chai.expect)(wrapper.state().newPhone['value']).to.equal('');\n(0, _chai.expect)(wrapper.state().displayForm).to.equal(false);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones.length).to.equal(5);",
      "err": {},
      "isRoot": false,
      "uuid": "77e61e8f-be5b-4ece-8a09-d06c0266fe6c",
      "parentUUID": "1b0e59cf-6973-4556-baca-88b57a045292",
      "skipped": false
    },
    {
      "title": "should add new object after click btn",
      "fullTitle": "#addNew should add new object after click btn",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.instance().seeForm();\nvar textField = wrapper.find('InputWithoutValue').first();\nvar event = { key: 'Enter', target: { value: 'mock', name: 'name' } };\ntextField.simulate('change', event);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones.length).to.equal(4);\n(0, _chai.expect)(wrapper.find('button').last().text()).to.equal('Add');\nwrapper.find('button').last().simulate('click');\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones.length).to.equal(5);",
      "err": {},
      "isRoot": false,
      "uuid": "b68fff3c-d28b-45e7-bfb7-1b6ade386e7b",
      "parentUUID": "1b0e59cf-6973-4556-baca-88b57a045292",
      "skipped": false
    },
    {
      "title": "should render \"ColorComponent\" with markup",
      "fullTitle": "ColorComponent  should render \"ColorComponent\" with markup",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_ColorComponent2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('h2').length).to.equal(1);\n(0, _chai.expect)(wrapper.find('p').length).to.equal(1);\n(0, _chai.expect)((0, _typeof3.default)(wrapper.find('div').children().nodes[2].type)).to.equal('function');",
      "err": {},
      "isRoot": false,
      "uuid": "840affc7-c092-4a13-b776-b11044023193",
      "parentUUID": "f9426263-3b21-4583-85fe-88681d8aef87",
      "skipped": false
    },
    {
      "title": "h2 should contain text \"Color Schema\"",
      "fullTitle": "ColorComponent  h2 should contain text \"Color Schema\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_ColorComponent2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('p').text()).to.equal('Dark schema');",
      "err": {},
      "isRoot": false,
      "uuid": "7e8b4689-1b23-49f8-b063-e665cfc9145d",
      "parentUUID": "f9426263-3b21-4583-85fe-88681d8aef87",
      "skipped": false
    },
    {
      "title": "p should contain text \"Dark schema\"",
      "fullTitle": "ColorComponent  p should contain text \"Dark schema\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_ColorComponent2.default, null));\n(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('p').text()).to.equal('Dark schema');",
      "err": {},
      "isRoot": false,
      "uuid": "4a5f7786-5d12-4ebc-bf5e-78c740aee20e",
      "parentUUID": "f9426263-3b21-4583-85fe-88681d8aef87",
      "skipped": false
    },
    {
      "title": "should render \"AddNewPhoneComponent\" with markup",
      "fullTitle": "AddNewPhoneComponent  should render \"AddNewPhoneComponent\" with markup",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)(wrapper).to.exist();\n(0, _chai.expect)(wrapper.find('h2').length).to.equal(1);\n(0, _chai.expect)(wrapper.find('h2').text()).to.equal('Notification');",
      "err": {},
      "isRoot": false,
      "uuid": "b78d71d9-aded-4830-937c-54bce103dd57",
      "parentUUID": "b7456f45-34c1-425e-b14a-ca9740dc9f39",
      "skipped": false
    },
    {
      "title": "should change state of checkbox with key \"checked\"",
      "fullTitle": "#toggleNotificationSetting should change state of checkbox with key \"checked\"",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapperInstance = wrapper.instance();\nvar wrapperProps = wrapperInstance.props;\nvar secondPhone = wrapperProps.dataBase.phones[2];\n(0, _chai.expect)(secondPhone.checked).to.equal(false);\nwrapperInstance.toggleNotificationSetting(secondPhone, 'checked');\n(0, _chai.expect)(secondPhone.checked).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "c7de64dc-8ffe-4c79-bae9-4e6cdd3e9b56",
      "parentUUID": "05e100c6-9f21-4593-b4ed-3fe3940b4932",
      "skipped": false
    },
    {
      "title": "should change state of checkbox with key \"highPriority\"",
      "fullTitle": "#toggleNotificationSetting should change state of checkbox with key \"highPriority\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapperInstance = wrapper.instance();\nvar wrapperProps = wrapperInstance.props;\nvar secondPhone = wrapperProps.dataBase.phones[0];\n(0, _chai.expect)(secondPhone.highPriority).to.equal(true);\nwrapperInstance.toggleNotificationSetting(secondPhone, 'highPriority');\n(0, _chai.expect)(secondPhone.highPriority).to.equal(false);",
      "err": {},
      "isRoot": false,
      "uuid": "f34d0fd6-fc91-4519-8c24-fc31f8819462",
      "parentUUID": "05e100c6-9f21-4593-b4ed-3fe3940b4932",
      "skipped": false
    },
    {
      "title": "render four tr from database.phones",
      "fullTitle": "#renderCheckboxes render four tr from database.phones",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var renderCheckboxes = wrapper.instance().renderCheckboxes();\n(0, _chai.expect)(renderCheckboxes.length).to.equal(4);\n(0, _chai.expect)(renderCheckboxes[2].type).to.equal('tr');\n(0, _chai.expect)(renderCheckboxes[2].key).to.equal('2');",
      "err": {},
      "isRoot": false,
      "uuid": "3a981c9f-bb3c-495c-95e8-865e40b2f40d",
      "parentUUID": "8a1240da-b95d-4d0d-8994-8a65b34ed195",
      "skipped": false
    },
    {
      "title": "each tr has three td",
      "fullTitle": "#renderCheckboxes each tr has three td",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var renderCheckboxes = wrapper.instance().renderCheckboxes();\nvar checkAllTypesAndLength = (0, _lodash.every)(renderCheckboxes, function (item) {\n  var checkLengthOfItem = item.props.children.length == 3;\n  var checkAllItemsChildren = (0, _lodash.every)(item.props.children, function (itemChild) {\n    return itemChild.type == 'td';\n  });\n  return checkLengthOfItem && checkAllItemsChildren;\n});\n(0, _chai.expect)(checkAllTypesAndLength).to.equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "943b3ba5-bf71-4cc3-a4a7-3ee3ef8cf78c",
      "parentUUID": "8a1240da-b95d-4d0d-8994-8a65b34ed195",
      "skipped": false
    },
    {
      "title": "should change checked",
      "fullTitle": "input in #renderCheckboxes should change checked",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var event = { target: { checked: false } };\n(0, _chai.expect)(wrapper.find('input').length).to.equal(8);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones[0].checked).to.equal(true);\nwrapper.find('input').first().simulate('change', event);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones[0].checked).to.equal(false);",
      "err": {},
      "isRoot": false,
      "uuid": "d1de5bdc-f1c4-44b2-b535-1c4b6e59292b",
      "parentUUID": "4c478c65-51b7-4573-bcff-f894180d2197",
      "skipped": false
    },
    {
      "title": "should change highPriority",
      "fullTitle": "input in #renderCheckboxes should change highPriority",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var event = { target: { checked: false } };\n(0, _chai.expect)(wrapper.find('input').length).to.equal(8);\ndebugger;\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones[0].highPriority).to.equal(true);\nwrapper.find('input').at(1).simulate('change', event);\n(0, _chai.expect)(wrapper.instance().props.dataBase.phones[0].highPriority).to.equal(false);",
      "err": {},
      "isRoot": false,
      "uuid": "f833d6d3-5888-4719-ad0b-6b0de6db519c",
      "parentUUID": "4c478c65-51b7-4573-bcff-f894180d2197",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}